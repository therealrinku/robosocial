[{"/home/r1nku/codes/personal/robosocial/client/src/index.tsx":"1","/home/r1nku/codes/personal/robosocial/client/src/redux/store.js":"2","/home/r1nku/codes/personal/robosocial/client/src/components/App.tsx":"3","/home/r1nku/codes/personal/robosocial/client/src/redux/rootReducer.js":"4","/home/r1nku/codes/personal/robosocial/client/src/redux/user/userActions.js":"5","/home/r1nku/codes/personal/robosocial/client/src/redux/post/postsActions.js":"6","/home/r1nku/codes/personal/robosocial/client/src/server_url.tsx":"7","/home/r1nku/codes/personal/robosocial/client/src/redux/user/userReducer.js":"8","/home/r1nku/codes/personal/robosocial/client/src/redux/post/postsReducer.js":"9","/home/r1nku/codes/personal/robosocial/client/src/redux/profile/profileReducer.js":"10","/home/r1nku/codes/personal/robosocial/client/src/redux/post/postsActionTypes.js":"11","/home/r1nku/codes/personal/robosocial/client/src/redux/user/userActionTypes.js":"12","/home/r1nku/codes/personal/robosocial/client/src/redux/profile/profileActionTypes.js":"13","/home/r1nku/codes/personal/robosocial/client/src/services/authServices.js":"14","/home/r1nku/codes/personal/robosocial/client/src/services/userServices.js":"15","/home/r1nku/codes/personal/robosocial/client/src/services/profileServices.js":"16","/home/r1nku/codes/personal/robosocial/client/src/utilities/notificationPusher.js":"17","/home/r1nku/codes/personal/robosocial/client/src/services/postsServices.js":"18","/home/r1nku/codes/personal/robosocial/client/src/services/commentServices.js":"19","/home/r1nku/codes/personal/robosocial/client/src/components/Layout/index.ts":"20","/home/r1nku/codes/personal/robosocial/client/src/components/Banner/index.ts":"21","/home/r1nku/codes/personal/robosocial/client/src/components/MessageView/index.ts":"22","/home/r1nku/codes/personal/robosocial/client/src/components/Loader/index.ts":"23","/home/r1nku/codes/personal/robosocial/client/src/pages/HomePage/index.ts":"24","/home/r1nku/codes/personal/robosocial/client/src/pages/ProfilePage/index.ts":"25","/home/r1nku/codes/personal/robosocial/client/src/pages/PostViewPage/index.ts":"26","/home/r1nku/codes/personal/robosocial/client/src/pages/NotificationsPage/index.ts":"27","/home/r1nku/codes/personal/robosocial/client/src/pages/LandingPage/index.ts":"28","/home/r1nku/codes/personal/robosocial/client/src/pages/ExplorePage/index.tsx":"29","/home/r1nku/codes/personal/robosocial/client/src/firebase/firestore.js":"30","/home/r1nku/codes/personal/robosocial/client/src/firebase/storage.js":"31","/home/r1nku/codes/personal/robosocial/client/src/components/Layout/Layout.tsx":"32","/home/r1nku/codes/personal/robosocial/client/src/components/Banner/Banner.tsx":"33","/home/r1nku/codes/personal/robosocial/client/src/components/MessageView/MessageView.tsx":"34","/home/r1nku/codes/personal/robosocial/client/src/components/Loader/Loader.tsx":"35","/home/r1nku/codes/personal/robosocial/client/src/pages/ProfilePage/ProfilePage.tsx":"36","/home/r1nku/codes/personal/robosocial/client/src/pages/HomePage/HomePage.tsx":"37","/home/r1nku/codes/personal/robosocial/client/src/pages/NotificationsPage/NotificationsPage.tsx":"38","/home/r1nku/codes/personal/robosocial/client/src/pages/LandingPage/LandingPage.tsx":"39","/home/r1nku/codes/personal/robosocial/client/src/pages/PostViewPage/PostViewPage.tsx":"40","/home/r1nku/codes/personal/robosocial/client/src/pages/ExplorePage/ExplorePage.tsx":"41","/home/r1nku/codes/personal/robosocial/client/src/firebase/firebase.js":"42","/home/r1nku/codes/personal/robosocial/client/src/utilities/lazyLoadImage.js":"43","/home/r1nku/codes/personal/robosocial/client/src/utilities/overflowToggler.js":"44","/home/r1nku/codes/personal/robosocial/client/src/redux/profile/ProfileActions.js":"45","/home/r1nku/codes/personal/robosocial/client/src/utilities/clearNotification.js":"46","/home/r1nku/codes/personal/robosocial/client/src/components/Navbar/index.ts":"47","/home/r1nku/codes/personal/robosocial/client/src/components/UnfollowPrompt/index.ts":"48","/home/r1nku/codes/personal/robosocial/client/src/components/ProfileSummary/index.ts":"49","/home/r1nku/codes/personal/robosocial/client/src/components/PostsGrid/index.ts":"50","/home/r1nku/codes/personal/robosocial/client/src/components/UserListView/index.ts":"51","/home/r1nku/codes/personal/robosocial/client/src/components/Register/index.ts":"52","/home/r1nku/codes/personal/robosocial/client/src/components/PostUploadView/index.ts":"53","/home/r1nku/codes/personal/robosocial/client/src/components/TwoColumnLayout/index.ts":"54","/home/r1nku/codes/personal/robosocial/client/src/components/LoginPrompt/index.ts":"55","/home/r1nku/codes/personal/robosocial/client/src/components/CommentsView/index.ts":"56","/home/r1nku/codes/personal/robosocial/client/src/components/Post/index.ts":"57","/home/r1nku/codes/personal/robosocial/client/src/components/Feed/index.ts":"58","/home/r1nku/codes/personal/robosocial/client/src/components/CommentInput/index.ts":"59","/home/r1nku/codes/personal/robosocial/client/src/components/Login/index.ts":"60","/home/r1nku/codes/personal/robosocial/client/src/components/Navbar/Navbar.tsx":"61","/home/r1nku/codes/personal/robosocial/client/src/components/PostsGrid/PostsGrid.tsx":"62","/home/r1nku/codes/personal/robosocial/client/src/components/UnfollowPrompt/UnfollowPrompt.tsx":"63","/home/r1nku/codes/personal/robosocial/client/src/components/Register/Register.tsx":"64","/home/r1nku/codes/personal/robosocial/client/src/components/PostUploadView/PostUploadView.tsx":"65","/home/r1nku/codes/personal/robosocial/client/src/components/LoginPrompt/LoginPrompt.tsx":"66","/home/r1nku/codes/personal/robosocial/client/src/components/TwoColumnLayout/TwoColumnLayout.tsx":"67","/home/r1nku/codes/personal/robosocial/client/src/components/UserListView/UserListView.tsx":"68","/home/r1nku/codes/personal/robosocial/client/src/components/ProfileSummary/ProfileSummary.tsx":"69","/home/r1nku/codes/personal/robosocial/client/src/components/CommentsView/CommentsView.tsx":"70","/home/r1nku/codes/personal/robosocial/client/src/components/CommentInput/CommentInput.tsx":"71","/home/r1nku/codes/personal/robosocial/client/src/components/Feed/Feed.tsx":"72","/home/r1nku/codes/personal/robosocial/client/src/components/Post/Post.tsx":"73","/home/r1nku/codes/personal/robosocial/client/src/components/Login/Login.tsx":"74","/home/r1nku/codes/personal/robosocial/client/src/utilities/formValidator.ts":"75","/home/r1nku/codes/personal/robosocial/client/src/components/Logo/index.ts":"76","/home/r1nku/codes/personal/robosocial/client/src/components/SearchUsers/index.ts":"77","/home/r1nku/codes/personal/robosocial/client/src/components/Modal/index.ts":"78","/home/r1nku/codes/personal/robosocial/client/src/components/Comment/index.ts":"79","/home/r1nku/codes/personal/robosocial/client/src/components/PostOptionsModal/index.ts":"80","/home/r1nku/codes/personal/robosocial/client/src/components/RecommendedSideview/index.ts":"81","/home/r1nku/codes/personal/robosocial/client/src/components/LogoutPrompt/index.ts":"82","/home/r1nku/codes/personal/robosocial/client/src/components/Form/index.ts":"83","/home/r1nku/codes/personal/robosocial/client/src/components/SettingsModal/index.ts":"84","/home/r1nku/codes/personal/robosocial/client/src/components/Logo/Logo.tsx":"85","/home/r1nku/codes/personal/robosocial/client/src/components/SearchUsers/SearchUsers.tsx":"86","/home/r1nku/codes/personal/robosocial/client/src/components/Modal/Modal.tsx":"87","/home/r1nku/codes/personal/robosocial/client/src/components/RecommendedSideview/RecommendedSideView.tsx":"88","/home/r1nku/codes/personal/robosocial/client/src/components/PostOptionsModal/PostOptionsModal.tsx":"89","/home/r1nku/codes/personal/robosocial/client/src/components/LogoutPrompt/LogoutPrompt.tsx":"90","/home/r1nku/codes/personal/robosocial/client/src/components/Comment/Comment.tsx":"91","/home/r1nku/codes/personal/robosocial/client/src/components/Form/Form.tsx":"92","/home/r1nku/codes/personal/robosocial/client/src/components/SettingsModal/SettingsModal.tsx":"93","/home/r1nku/codes/personal/robosocial/client/src/components/Backdrop/index.ts":"94","/home/r1nku/codes/personal/robosocial/client/src/components/Backdrop/Backdrop.tsx":"95"},{"size":353,"mtime":1702976320858,"results":"96","hashOfConfig":"97"},{"size":334,"mtime":1702976320858,"results":"98","hashOfConfig":"97"},{"size":4684,"mtime":1702976320854,"results":"99","hashOfConfig":"97"},{"size":333,"mtime":1702976320858,"results":"100","hashOfConfig":"97"},{"size":2942,"mtime":1702976320858,"results":"101","hashOfConfig":"97"},{"size":9025,"mtime":1702976320858,"results":"102","hashOfConfig":"97"},{"size":80,"mtime":1702976320858,"results":"103","hashOfConfig":"97"},{"size":2208,"mtime":1702976320858,"results":"104","hashOfConfig":"97"},{"size":8980,"mtime":1702976320858,"results":"105","hashOfConfig":"97"},{"size":2906,"mtime":1702976320858,"results":"106","hashOfConfig":"97"},{"size":1062,"mtime":1702976320858,"results":"107","hashOfConfig":"97"},{"size":418,"mtime":1702976320858,"results":"108","hashOfConfig":"97"},{"size":472,"mtime":1702976320858,"results":"109","hashOfConfig":"97"},{"size":570,"mtime":1702976320858,"results":"110","hashOfConfig":"97"},{"size":1788,"mtime":1702976320858,"results":"111","hashOfConfig":"97"},{"size":2020,"mtime":1702976320858,"results":"112","hashOfConfig":"97"},{"size":307,"mtime":1702976320858,"results":"113","hashOfConfig":"97"},{"size":3632,"mtime":1702976320858,"results":"114","hashOfConfig":"97"},{"size":1624,"mtime":1702976320858,"results":"115","hashOfConfig":"97"},{"size":36,"mtime":1702976320854,"results":"116","hashOfConfig":"97"},{"size":36,"mtime":1702976320854,"results":"117","hashOfConfig":"97"},{"size":41,"mtime":1702976320854,"results":"118","hashOfConfig":"97"},{"size":36,"mtime":1702976320854,"results":"119","hashOfConfig":"97"},{"size":38,"mtime":1702976320858,"results":"120","hashOfConfig":"97"},{"size":38,"mtime":1702976320858,"results":"121","hashOfConfig":"97"},{"size":42,"mtime":1702976320858,"results":"122","hashOfConfig":"97"},{"size":47,"mtime":1702976320858,"results":"123","hashOfConfig":"97"},{"size":39,"mtime":1702976320858,"results":"124","hashOfConfig":"97"},{"size":41,"mtime":1702976320858,"results":"125","hashOfConfig":"97"},{"size":362,"mtime":1702976320858,"results":"126","hashOfConfig":"97"},{"size":124,"mtime":1702976320858,"results":"127","hashOfConfig":"97"},{"size":245,"mtime":1702976320854,"results":"128","hashOfConfig":"97"},{"size":822,"mtime":1702976320854,"results":"129","hashOfConfig":"97"},{"size":277,"mtime":1702976320854,"results":"130","hashOfConfig":"97"},{"size":760,"mtime":1702976320854,"results":"131","hashOfConfig":"97"},{"size":6824,"mtime":1702976320858,"results":"132","hashOfConfig":"97"},{"size":1805,"mtime":1702976320858,"results":"133","hashOfConfig":"97"},{"size":4744,"mtime":1702976320858,"results":"134","hashOfConfig":"97"},{"size":972,"mtime":1702976320858,"results":"135","hashOfConfig":"97"},{"size":6435,"mtime":1702976320858,"results":"136","hashOfConfig":"97"},{"size":3531,"mtime":1702976320858,"results":"137","hashOfConfig":"97"},{"size":572,"mtime":1704962219220,"results":"138","hashOfConfig":"97"},{"size":461,"mtime":1702976320858,"results":"139","hashOfConfig":"97"},{"size":222,"mtime":1702976320858,"results":"140","hashOfConfig":"97"},{"size":2780,"mtime":1702976320858,"results":"141","hashOfConfig":"97"},{"size":194,"mtime":1702976320858,"results":"142","hashOfConfig":"97"},{"size":36,"mtime":1702976320854,"results":"143","hashOfConfig":"97"},{"size":44,"mtime":1702976320858,"results":"144","hashOfConfig":"97"},{"size":44,"mtime":1702976320858,"results":"145","hashOfConfig":"97"},{"size":39,"mtime":1702976320858,"results":"146","hashOfConfig":"97"},{"size":42,"mtime":1702976320858,"results":"147","hashOfConfig":"97"},{"size":38,"mtime":1702976320858,"results":"148","hashOfConfig":"97"},{"size":44,"mtime":1702976320858,"results":"149","hashOfConfig":"97"},{"size":45,"mtime":1702976320858,"results":"150","hashOfConfig":"97"},{"size":41,"mtime":1702976320854,"results":"151","hashOfConfig":"97"},{"size":42,"mtime":1702976320854,"results":"152","hashOfConfig":"97"},{"size":34,"mtime":1702976320854,"results":"153","hashOfConfig":"97"},{"size":34,"mtime":1702976320854,"results":"154","hashOfConfig":"97"},{"size":42,"mtime":1702976320854,"results":"155","hashOfConfig":"97"},{"size":35,"mtime":1702976320854,"results":"156","hashOfConfig":"97"},{"size":5525,"mtime":1702976320854,"results":"157","hashOfConfig":"97"},{"size":1062,"mtime":1702976320858,"results":"158","hashOfConfig":"97"},{"size":976,"mtime":1702976320858,"results":"159","hashOfConfig":"97"},{"size":1739,"mtime":1702976320858,"results":"160","hashOfConfig":"97"},{"size":3449,"mtime":1702976320858,"results":"161","hashOfConfig":"97"},{"size":833,"mtime":1702976320854,"results":"162","hashOfConfig":"97"},{"size":668,"mtime":1702976320858,"results":"163","hashOfConfig":"97"},{"size":1480,"mtime":1702976320858,"results":"164","hashOfConfig":"97"},{"size":3822,"mtime":1702976320858,"results":"165","hashOfConfig":"97"},{"size":1168,"mtime":1702976320854,"results":"166","hashOfConfig":"97"},{"size":2417,"mtime":1702976320854,"results":"167","hashOfConfig":"97"},{"size":1425,"mtime":1702976320854,"results":"168","hashOfConfig":"97"},{"size":9911,"mtime":1702976320854,"results":"169","hashOfConfig":"97"},{"size":1510,"mtime":1702976320854,"results":"170","hashOfConfig":"97"},{"size":1264,"mtime":1702976320858,"results":"171","hashOfConfig":"97"},{"size":34,"mtime":1702976320854,"results":"172","hashOfConfig":"97"},{"size":41,"mtime":1702976320858,"results":"173","hashOfConfig":"97"},{"size":35,"mtime":1702976320854,"results":"174","hashOfConfig":"97"},{"size":37,"mtime":1702976320854,"results":"175","hashOfConfig":"97"},{"size":46,"mtime":1702976320858,"results":"176","hashOfConfig":"97"},{"size":49,"mtime":1702976320858,"results":"177","hashOfConfig":"97"},{"size":42,"mtime":1702976320854,"results":"178","hashOfConfig":"97"},{"size":34,"mtime":1702976320854,"results":"179","hashOfConfig":"97"},{"size":43,"mtime":1702976320858,"results":"180","hashOfConfig":"97"},{"size":275,"mtime":1702976320854,"results":"181","hashOfConfig":"97"},{"size":2088,"mtime":1702976320858,"results":"182","hashOfConfig":"97"},{"size":1000,"mtime":1702976320854,"results":"183","hashOfConfig":"97"},{"size":1420,"mtime":1702976320858,"results":"184","hashOfConfig":"97"},{"size":2424,"mtime":1702976320858,"results":"185","hashOfConfig":"97"},{"size":614,"mtime":1702976320854,"results":"186","hashOfConfig":"97"},{"size":3230,"mtime":1702976320854,"results":"187","hashOfConfig":"97"},{"size":3737,"mtime":1707042188612,"results":"188","hashOfConfig":"97"},{"size":9792,"mtime":1702976320858,"results":"189","hashOfConfig":"97"},{"size":38,"mtime":1702976320854,"results":"190","hashOfConfig":"97"},{"size":260,"mtime":1702976320854,"results":"191","hashOfConfig":"97"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"12uqblc",{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"194"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"261","usedDeprecatedRules":"194"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"194"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"194"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"194"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"194"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"194"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"194"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"194"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"194"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"194"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"194"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"194"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"194"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"/home/r1nku/codes/personal/robosocial/client/src/index.tsx",[],["398","399"],"/home/r1nku/codes/personal/robosocial/client/src/redux/store.js",[],["400","401"],"/home/r1nku/codes/personal/robosocial/client/src/components/App.tsx",["402","403","404"],"import { useEffect, Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"../pages/HomePage\";\nimport PostViewPage from \"../pages/PostViewPage\";\nimport ProfilePage from \"../pages/ProfilePage\";\nimport LandingPage from \"../pages/LandingPage\";\nimport Layout from \"./Layout\";\nimport * as userActions from \"../redux/user/userActions\";\nimport * as postActions from \"../redux/post/postsActions\";\nimport MessageView from \"./MessageView\";\nimport NotificationsPage from \"../pages/NotificationsPage\";\nimport ExplorePage from \"../pages/ExplorePage\";\nimport axios from \"axios\";\nimport Loader from \"./Loader\";\nimport Banner from \"./Banner\";\nimport server_url from \"../server_url\";\n\ntype AppTypes = {\n  currentUsername: string;\n  uploadingPost: boolean;\n  GET_USER_DATA: Function;\n  token: string;\n  userDataLoaded: boolean;\n  feedLoaded: boolean;\n  ADD_MESSAGE: Function;\n  message: string;\n  GET_FEED: () => void;\n  currentUserUid: string;\n};\n\nconst App = ({\n  currentUsername,\n  uploadingPost,\n  GET_USER_DATA,\n  token,\n  userDataLoaded,\n  feedLoaded,\n  ADD_MESSAGE,\n  message,\n  GET_FEED,\n}: AppTypes) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [banner, setBanner] = useState({});\n\n  useEffect(() => {\n    axios.get(`${server_url}/user/getBanner`).then((res) => {\n      setBanner(res.data?.banner ?? {});\n    });\n  }, []);\n\n  useEffect(() => {\n    if (feedLoaded) {\n      if (uploadingPost) {\n        ADD_MESSAGE(\"Uploading your post. it may take couple of seconds.\");\n      } else {\n        ADD_MESSAGE(\"Successfully uploaded a post.\");\n      }\n    }\n  }, [uploadingPost]);\n\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      axios.interceptors.response.use(\n        (response) => {\n          return response;\n        },\n        (error) => {\n          if (error?.response?.status === 401) {\n            localStorage.clear();\n            window.location.reload();\n          }\n          return error;\n        }\n      );\n      if (token) {\n        GET_USER_DATA(token);\n        if (!feedLoaded) {\n          GET_FEED();\n        }\n      }\n    }\n  }, [token]);\n\n  useEffect(() => {\n    if (message) {\n      setTimeout(() => ADD_MESSAGE(null), 3000);\n    }\n  }, [message]);\n\n  useEffect(() => {\n    //for fake loading animation for at least 2 sec\n    setTimeout(() => setIsLoading(false), 2000);\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {(token && !userDataLoaded) || isLoading ? (\n        <Loader fullPage />\n      ) : (\n        <Fragment>\n          {/* @ts-ignore */}\n          {banner?.bannerText && currentUsername && (\n            <Fragment>\n              <Banner\n                banner={banner}\n                onCancel={() => {\n                  setBanner({});\n                  const sideView = document.querySelector(\".side-view\");\n                  //move up the sidee viewww\n                  if (sideView) {\n                    sideView.classList.remove(\"top-[90px]\");\n                    sideView.classList.add(\"top-[80px]\");\n                  }\n                }}\n              />\n              <div className=\"mb-24\"></div>\n            </Fragment>\n          )}\n\n          {message ? <MessageView message={message} /> : null}\n\n          <Switch>\n            {!currentUsername && <Route path=\"/\" exact component={LandingPage} />}\n            <Layout>\n              <>\n                {currentUsername && <Route path=\"/\" exact component={HomePage} />}\n                <Route path=\"/explore\" exact component={ExplorePage} />\n                <Route path=\"/user/:username\" exact component={ProfilePage} />\n                <Route path=\"/p/:post_id\" exact component={PostViewPage} />\n                <Route path=\"/notifications\" exact component={NotificationsPage} />\n              </>\n            </Layout>\n          </Switch>\n        </Fragment>\n      )}\n    </BrowserRouter>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    message: state.posts.message,\n    feedLoaded: state.posts.feed_loaded,\n    uploadingPost: state.posts.uploadingPost,\n    userDataLoaded: state.user.user_data_loaded,\n    token: state.user.token,\n    currentUsername: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    ADD_MESSAGE: (message: string) => dispatch(postActions.ADD_MESSAGE(message)),\n    GET_USER_DATA: () => dispatch(userActions.GET_USER_DATA()),\n    GET_FEED: () => dispatch(postActions.GET_FEED()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/r1nku/codes/personal/robosocial/client/src/redux/rootReducer.js",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/user/userActions.js",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/post/postsActions.js",[],"/home/r1nku/codes/personal/robosocial/client/src/server_url.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/user/userReducer.js",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/post/postsReducer.js",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/profile/profileReducer.js",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/post/postsActionTypes.js",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/user/userActionTypes.js",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/profile/profileActionTypes.js",[],"/home/r1nku/codes/personal/robosocial/client/src/services/authServices.js",[],"/home/r1nku/codes/personal/robosocial/client/src/services/userServices.js",[],"/home/r1nku/codes/personal/robosocial/client/src/services/profileServices.js",[],"/home/r1nku/codes/personal/robosocial/client/src/utilities/notificationPusher.js",[],"/home/r1nku/codes/personal/robosocial/client/src/services/postsServices.js",[],"/home/r1nku/codes/personal/robosocial/client/src/services/commentServices.js",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Layout/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Banner/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/MessageView/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Loader/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/pages/HomePage/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/pages/ProfilePage/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/pages/PostViewPage/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/pages/NotificationsPage/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/pages/LandingPage/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/pages/ExplorePage/index.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/firebase/firestore.js",[],"/home/r1nku/codes/personal/robosocial/client/src/firebase/storage.js",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Layout/Layout.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Banner/Banner.tsx",["405"],"import { Fragment } from \"react\";\nimport { FiX } from \"react-icons/fi\";\n\nfunction AdView({ banner, onCancel }: any) {\n  return (\n    <Fragment>\n      <div\n        className={`flex items-center banner text-sm text-white flex items-center z-40 justify-center fixed w-full h-[30px] ${banner.bgClassName} top-[50px]`}\n      >\n        {/*@ts-ignore*/}\n        <p className=\"text-center\">{banner.bannerText}</p>\n        {banner.bannerLink && (\n          <a target=\"_blank\" className=\"text-xs font-bold underline mx-3\" href={banner.bannerLink}>\n            {banner.bannerLinkTitle}\n          </a>\n        )}\n\n        {banner.closeable && (\n          <button onClick={onCancel} className=\"absolute right-10\">\n            <FiX size={20} />\n          </button>\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default AdView;\n","/home/r1nku/codes/personal/robosocial/client/src/components/MessageView/MessageView.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Loader/Loader.tsx",["406"],"import { useEffect, useState } from \"react\";\n\ntype LoaderTypes = {\n  fullPage?: boolean;\n};\n\nexport default function Loader({ fullPage }: LoaderTypes) {\n  const [loaderWidth, setLoaderWidth] = useState(0);\n\n  useEffect(() => {\n    let width = loaderWidth;\n    const timer = setInterval(() => {\n      width += 20;\n      setLoaderWidth(width);\n\n      if (width >= 200) clearInterval(timer);\n    }, 500);\n  }, []);\n\n  return (\n    <div\n      className={`${\n        fullPage ? \"z-50 top-0 fixed h-full w-full bg-white\" : \"mt-3\"\n      } flex flex-col justify-center items-center mx-auto`}\n    >\n      <div className=\"w-[200px] bg-[#f0f2f5] h-[12px]\">\n        <div style={{ width: loaderWidth }} className=\"bg-[#018e23] h-full\"></div>\n      </div>\n    </div>\n  );\n}\n","/home/r1nku/codes/personal/robosocial/client/src/pages/ProfilePage/ProfilePage.tsx",["407"],"import { Fragment, useEffect, useState } from \"react\";\nimport ProfileSummary from \"../../components/ProfileSummary\";\nimport * as profileActions from \"../../redux/profile/ProfileActions\";\nimport { connect } from \"react-redux\";\nimport overflowToggler from \"../../utilities/overflowToggler\";\nimport UnfollowPrompt from \"../../components/UnfollowPrompt\";\nimport PostsGrid from \"../../components/PostsGrid\";\nimport UserListView from \"../../components/UserListView\";\nimport Loader from \"../../components/Loader\";\nimport LoginPrompt from \"../../components/LoginPrompt\";\nimport PostUploadView from \"../../components/PostUploadView\";\nimport TwoColumnLayout from \"../../components/TwoColumnLayout\";\nimport * as userActions from \"../../redux/user/userActions\";\n\ntype ProfilePageTypes = {\n  history: any;\n  currentUserUid: string;\n  profiles: Array<any>;\n  GET_PROFILE_DATA: Function;\n  currentUsername: string;\n  FOLLOW: Function;\n  UNFOLLOW: Function;\n  FETCH_FOLLOWERS: Function;\n  FETCH_FOLLOWINGS: Function;\n  loading: boolean;\n  loading_followers_or_following: boolean;\n  LOGOUT: () => void;\n};\n\nconst Profilepage = ({\n  history,\n  currentUserUid,\n  profiles,\n  GET_PROFILE_DATA,\n  currentUsername,\n  FOLLOW,\n  UNFOLLOW,\n  FETCH_FOLLOWERS,\n  FETCH_FOLLOWINGS,\n  loading,\n  loading_followers_or_following,\n  LOGOUT,\n}: ProfilePageTypes) => {\n  const profileUsername = history.location.pathname.slice(6);\n  const profileData = profiles.filter((profile) => profile?.username === profileUsername);\n\n  //modal handlers\n  const [showUnfollowPrompt, setShowUnfollowPrompt] = useState(false);\n  const [showFollowers, setShowFollowers] = useState(false);\n  const [showFollowings, setShowFollowings] = useState(false);\n  const [showLoginNeededPrompt, setShowLoginNeededPrompt] = useState(false);\n  const [showPostUploadModal, setShowPostUploadModal] = useState(false);\n\n  const [profileLoading, setProfileLoading] = useState(true);\n\n  useEffect(() => {\n    if (!loading) setProfileLoading(false);\n  }, [loading]);\n\n  //followers and following list\n  const followersList = profiles.filter((profile) => profile.username === profileUsername)[0]?.followers;\n  const followingList = profiles.filter((profile) => profile.username === profileUsername)[0]?.followings;\n\n  const LOAD_FOLLOWERS = () => {\n    if (!followersList) {\n      FETCH_FOLLOWERS(profileUsername);\n    }\n    toggleModal(setShowFollowers);\n  };\n\n  const LOAD_FOLLOWINGS = () => {\n    if (!followingList) {\n      FETCH_FOLLOWINGS(profileUsername);\n    }\n    toggleModal(setShowFollowings);\n  };\n\n  const toggleModal = (setModal: Function) => {\n    setModal((prev: any) => !prev);\n    overflowToggler();\n  };\n\n  const follow = () => {\n    if (currentUserUid) {\n      FOLLOW(profileData[0]?.uid, currentUserUid);\n    } else {\n      toggleModal(setShowLoginNeededPrompt);\n    }\n  };\n\n  useEffect(() => {\n    document.body.style.overflow = \"auto\";\n    //set document title\n    document.title = `${profileUsername}`;\n    if (profileData.length <= 0) {\n      GET_PROFILE_DATA(profileUsername, currentUserUid);\n    }\n\n    return () => {\n      document.title = \"robosocial\";\n    };\n  }, [profileUsername, currentUserUid]);\n\n  return (\n    <Fragment>\n      {(loading || profileLoading) && <Loader fullPage />}\n\n      <TwoColumnLayout\n        component1={() => (\n          <Fragment>\n            {!loading && !profileLoading && (\n              <div>\n                <ProfileSummary\n                  showPostUploadModal={() => toggleModal(setShowPostUploadModal)}\n                  profileData={profileData[0] || []}\n                  toggleUnfollowPrompt={() => toggleModal(setShowUnfollowPrompt)}\n                  isMyProfile={currentUsername === profileUsername}\n                  FOLLOW={follow}\n                  LOAD_FOLLOWERS={LOAD_FOLLOWERS}\n                  LOAD_FOLLOWINGS={LOAD_FOLLOWINGS}\n                  LOGOUT={LOGOUT}\n                  currentUsername={currentUsername}\n                />\n\n                {profileData[0]?.posts?.length > 0 && (\n                  <section className={`bg-white`}>\n                    <PostsGrid userPosts={profileData[0]?.posts || []} />\n                  </section>\n                )}\n\n                {showUnfollowPrompt && (\n                  <Fragment>\n                    <UnfollowPrompt\n                      profileUsername={profileUsername}\n                      profileImage={profileData[0]?.profile_image_url}\n                      toggle={() => toggleModal(setShowUnfollowPrompt)}\n                      UNFOLLOW={() => UNFOLLOW(profileData[0].uid, currentUserUid)}\n                    />\n                  </Fragment>\n                )}\n\n                {showPostUploadModal && (\n                  <Fragment>\n                    <PostUploadView toggle={() => toggleModal(setShowPostUploadModal)} />\n                  </Fragment>\n                )}\n\n                {(showFollowers || showFollowings) && (\n                  <Fragment>\n                    <UserListView\n                      title={showFollowers ? \"Followers\" : \"Following\"}\n                      loading={loading_followers_or_following}\n                      users={(showFollowers ? followersList : followingList) || []}\n                      toggle={() => (showFollowers ? toggleModal(setShowFollowers) : toggleModal(setShowFollowings))}\n                    />\n                  </Fragment>\n                )}\n              </div>\n            )}\n\n            {showLoginNeededPrompt && (\n              <Fragment>\n                <LoginPrompt profilePage={true} toggle={() => toggleModal(setShowLoginNeededPrompt)} />\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    loading: state.profile.loading,\n    currentUsername: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n    profiles: state.profile.profiles,\n    loading_followers_or_following: state.profile.loading_followers_or_following,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    FETCH_FOLLOWERS: (username: string) => dispatch(profileActions.FETCH_FOLLOWERS(username)),\n    FETCH_FOLLOWINGS: (username: string) => dispatch(profileActions.FETCH_FOLLOWINGS(username)),\n    UNFOLLOW: (unfollowing_user_uid: string, unfollower_user_uid: string) =>\n      dispatch(profileActions.UNFOLLOW(unfollowing_user_uid, unfollower_user_uid)),\n    FOLLOW: (following_user_uid: string, follower_user_uid: string) =>\n      dispatch(profileActions.FOLLOW(following_user_uid, follower_user_uid)),\n    GET_PROFILE_DATA: (profile_username: string) => dispatch(profileActions.GET_PROFILE_DATA(profile_username)),\n    LOGOUT: () => dispatch(userActions.LOGOUT()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profilepage);\n","/home/r1nku/codes/personal/robosocial/client/src/pages/HomePage/HomePage.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/pages/NotificationsPage/NotificationsPage.tsx",["408"],"import { Fragment, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport clearNotification from \"../../utilities/clearNotification\";\nimport server_url from \"../../server_url\";\nimport { connect } from \"react-redux\";\nimport placeholderImage from \"../../assets/placeholder.jpg\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage.js\";\nimport ProfilePicPlaceholder from \"../../assets/avatar.jpg\";\nimport Moment from \"react-moment\";\nimport TwoColumnLayout from \"../../components/TwoColumnLayout\";\nimport Loader from \"../../components/Loader\";\n\ntype NotificationsPageTypes = {\n  currentUserUid: string;\n};\n\nconst NotificationsPage = ({ currentUserUid }: NotificationsPageTypes) => {\n  const history = useHistory();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (currentUserUid) {\n      clearNotification(currentUserUid);\n    }\n\n    axios.get(`${server_url}/user/getNotifications/${currentUserUid}`).then((res) => {\n      setNotifications(res.data);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      {loading && <Loader fullPage />}\n      <TwoColumnLayout\n        component1={() => (\n          <div className=\"bg-white p-5 text-sm border\">\n            <div className=\"flex flex-col gap-2\">\n              {notifications.length > 0 ? (\n                notifications\n                  .sort((a: any, b: any) => {\n                    return new Date(b.date).valueOf() - new Date(a.date).valueOf();\n                  })\n                  .map((noti: any) => {\n                    return (\n                      <div\n                        className=\"flex items-center gap-2 justify-between\"\n                        style={loading ? { display: \"none\" } : { width: \"100%\" }}\n                        key={noti.uid}\n                      >\n                        <div className=\"flex items-center gap-2\">\n                          <img\n                            data-src={noti.profile_image_url}\n                            src={ProfilePicPlaceholder}\n                            className={`lazy-image  h-7 w-7 rounded-full object-cover`}\n                            onLoad={lazyLoadImage}\n                            alt=\"profile-pc\"\n                          />\n                          <p>\n                            <Link to={`/user/${noti.username}`} className=\"font-bold hover:underline\">\n                              {noti.username}{\" \"}\n                            </Link>\n                            {noti.notification === \"like post\"\n                              ? \" liked your post.\"\n                              : noti.notification === \"dislike post\"\n                              ? \" disliked your post.\"\n                              : noti.notification === \"like comment\"\n                              ? \" liked your comment.\"\n                              : noti.notification === \"comment added\"\n                              ? \" commented on your post.\"\n                              : noti.notification === \"follow\"\n                              ? \"started following you.\"\n                              : \"\"}\n                            <i>\n                              {\" \"}\n                              <Moment fromNow>{noti.date}</Moment>\n                            </i>\n                          </p>\n                        </div>\n\n                        {noti.post_image && (\n                          <img\n                            data-src={noti.post_image}\n                            src={placeholderImage}\n                            className={`lazy-image h-12 w-12 object-cover`}\n                            onLoad={lazyLoadImage}\n                            alt=\"profile-pc\"\n                            onClick={() =>\n                              noti.post_id !== null\n                                ? history.push(`/p/${noti.post_id}`)\n                                : noti.notification === \"follow\"\n                                ? history.push(`/user/${noti.username}`)\n                                : \"\"\n                            }\n                          />\n                        )}\n                      </div>\n                    );\n                  })\n              ) : (\n                <p style={loading ? { display: \"none\" } : { textAlign: \"center\", fontSize: \"14px\" }}>\n                  No notifications\n                </p>\n              )}\n            </div>\n          </div>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    currentUserUid: state.user.currentUserData.uid,\n  };\n};\n\nexport default connect(mapStateToProps)(NotificationsPage);\n","/home/r1nku/codes/personal/robosocial/client/src/pages/LandingPage/LandingPage.tsx",["409"],"import { useState } from \"react\";\nimport MainImage from \"../../assets/main.jpg\";\nimport Register from \"../../components/Register\";\nimport Login from \"../../components/Login\";\n\nconst Landingpage = () => {\n  const [mode, setMode] = useState(\"login\");\n\n  return (\n    <div className=\"flex flex-col flex-col-reverse md:flex-row gap-10 bg-white\">\n      <section className=\"w-[100%] md:w-[50%]\">\n        <img src={MainImage} className=\"h-screen\t w-full object-cover\" />\n      </section>\n\n      <section className=\"w-[100%] md:w-[50%]\">\n        <div className=\"w-[85%] md:w-[70%] mx-auto mt-10 md:mt-24\">\n          {mode === \"login\" ? <Login /> : <Register />}\n          <button className=\"text-sm mt-5\" onClick={() => setMode(mode === \"login\" ? \"signup\" : \"login\")}>\n            <p>{mode === \"signup\" ? \"Already have an account? Login\" : \"Don't have an account? Register\"} </p>\n          </button>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Landingpage;\n","/home/r1nku/codes/personal/robosocial/client/src/pages/PostViewPage/PostViewPage.tsx",["410","411","412","413"],"import { Fragment, useEffect, useState } from \"react\";\nimport * as PostsActions from \"../../redux/post/postsActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport overflowToggler from \"../../utilities/overflowToggler\";\nimport CommentInput from \"../../components/CommentInput\";\nimport CommentsView from \"../../components/CommentsView\";\nimport { deleteComment, getCommentLikers } from \"../../services/commentServices\";\nimport LoginPrompt from \"../../components/LoginPrompt\";\nimport Post from \"../../components/Post\";\nimport TwoColumnLayout from \"../../components/TwoColumnLayout\";\n\ntype PostViewPageTypes = {\n  currentUsername: string;\n  currentUserUid: string;\n  posts: any;\n  match: any;\n  history: any;\n  LOAD_POST: any;\n  loading: boolean;\n  GET_COMMENTS: any;\n  LIKE_COMMENT: any;\n  UNLIKE_COMMENT: any;\n  DELETE_COMMENT: any;\n  GET_COMMENT_LIKERS: any;\n  gettingCommentLikers: any;\n  userDataLoaded: boolean;\n  ADD_MESSAGE: any;\n  token: string;\n};\n\nconst PostViewPage = ({\n  currentUsername,\n  currentUserUid,\n  posts,\n  match,\n  history,\n  LOAD_POST,\n  loading,\n  GET_COMMENTS,\n  LIKE_COMMENT,\n  UNLIKE_COMMENT,\n  DELETE_COMMENT,\n  GET_COMMENT_LIKERS,\n  gettingCommentLikers,\n  userDataLoaded,\n  ADD_MESSAGE,\n  token,\n}: PostViewPageTypes) => {\n  const [showLoginNeededPrompt, setShowLoginNeededPrompt] = useState(false);\n  const post_id = match.params.post_id;\n  const currentPost = posts.filter((post: any) => post.post_id === post_id);\n  const thisPostComments = currentPost[0]?.comments;\n  const post_uid = currentPost[0]?.post_uid;\n\n  const [postLoading, setPostLoading] = useState(true);\n\n  useEffect(() => {\n    if (!loading) setPostLoading(false);\n  }, [loading]);\n\n  const toggleModal = (setModal: any) => {\n    setModal((prev: any) => !prev);\n    overflowToggler();\n  };\n\n  const getComments = () => {\n    if (!thisPostComments) {\n      GET_COMMENTS(post_uid);\n    }\n  };\n\n  const likeUnlikeComment = (likeOrUnlike: any, comment_uid: any) => {\n    if (currentUserUid) {\n      if (likeOrUnlike === \"like\") {\n        LIKE_COMMENT(comment_uid, currentUserUid, post_uid);\n      } else {\n        UNLIKE_COMMENT(comment_uid, currentUserUid, post_uid);\n      }\n    } else {\n      toggleModal(setShowLoginNeededPrompt);\n    }\n  };\n\n  const deleteComment = (comment_uid: any) => {\n    DELETE_COMMENT(comment_uid, post_uid);\n  };\n\n  const getCommentLikers = (comment_uid: any) => {\n    GET_COMMENT_LIKERS(comment_uid, post_uid);\n  };\n\n  useEffect(() => {\n    if (post_uid) {\n      getComments();\n    }\n  }, [post_uid]);\n\n  useEffect(() => {\n    document.body.style.overflow = \"auto\";\n    if (token) {\n      if (currentUserUid && currentPost.length < 1) {\n        LOAD_POST(post_id, currentUserUid);\n      }\n    } else {\n      LOAD_POST(post_id, currentUserUid);\n    }\n  }, [token, currentUserUid, post_id]);\n\n  return (\n    <Fragment>\n      {(loading || postLoading) && <Loader fullPage />}\n\n      <TwoColumnLayout\n        component1={() => (\n          <Fragment>\n            <Post\n              key={currentPost[0]?.post_uid}\n              post_id={currentPost[0]?.post_id}\n              haveILiked={currentPost[0]?.liked_by_me}\n              haveIDisliked={currentPost[0]?.disliked_by_me}\n              post_uid={currentPost[0]?.post_uid}\n              poster_username={currentPost[0]?.poster_username}\n              poster_profileImage={currentPost[0]?.poster_profileimage}\n              post_image={currentPost[0]?.post_image}\n              post_postedDate={currentPost[0]?.post_posted_date}\n              post_likesCount={currentPost[0]?.post_likes_count}\n              post_dislikesCount={currentPost[0]?.post_dislikes_count}\n              post_status={currentPost[0]?.post_status}\n              post_owner_uid={currentPost[0]?.poster_uid}\n              post_commentsCount={currentPost[0]?.post_comments_count}\n              haveISaved={currentPost[0]?.i_have_saved}\n              toggleLoginPrompt={() => toggleModal(setShowLoginNeededPrompt)}\n              fullHeightPostImage\n            />\n\n            {post_uid && (\n              <CommentInput\n                post_uid={post_uid}\n                post_owner_uid={currentPost[0]?.poster_uid}\n                toggleLoginNeededPrompt={() => toggleModal(setShowLoginNeededPrompt)}\n              />\n            )}\n\n            {thisPostComments !== undefined && (\n              <CommentsView\n                comments={thisPostComments || []}\n                likeUnlikeComment={likeUnlikeComment}\n                currentUserUid={currentUserUid}\n                deleteComment={deleteComment}\n                currentUsername={currentUsername}\n                getCommentLikers={getCommentLikers}\n                gettingCommentLikers={gettingCommentLikers}\n              />\n            )}\n          </Fragment>\n        )}\n      />\n\n      {showLoginNeededPrompt ? (\n        <Fragment>\n          <LoginPrompt toggle={() => toggleModal(setShowLoginNeededPrompt)} />\n        </Fragment>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    token: state.user.token,\n    userDataLoaded: state.user.user_data_loaded,\n    gettingCommentLikers: state.posts.getting_comment_likers,\n    loadingLikers: state.posts.loading_likers,\n    currentUsername: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n    posts: state.posts.posts,\n    loading: state.posts.loading_post,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    ADD_MESSAGE: (message: any) => dispatch(PostsActions.ADD_MESSAGE(message)),\n    GET_COMMENT_LIKERS: (comment_uid: any, post_uid: any) =>\n      dispatch(PostsActions.GET_COMMENT_LIKERS(comment_uid, post_uid)),\n    DELETE_COMMENT: (comment_uid: any, post_uid: any) => dispatch(PostsActions.DELETE_COMMENT(comment_uid, post_uid)),\n    LIKE_COMMENT: (comment_uid: any, liker_uid: any, post_uid: any) =>\n      dispatch(PostsActions.LIKE_COMMENT(comment_uid, liker_uid, post_uid)),\n    UNLIKE_COMMENT: (comment_uid: any, unliker_uid: any, post_uid: any) =>\n      dispatch(PostsActions.UNLIKE_COMMENT(comment_uid, unliker_uid, post_uid)),\n    GET_COMMENTS: (post_uid: any) => dispatch(PostsActions.GET_COMMENTS(post_uid)),\n    LOAD_POST: (post_id: any, current_user_uid: any) => dispatch(PostsActions.GET_POST(post_id, current_user_uid)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostViewPage);\n","/home/r1nku/codes/personal/robosocial/client/src/pages/ExplorePage/ExplorePage.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/firebase/firebase.js",[],"/home/r1nku/codes/personal/robosocial/client/src/utilities/lazyLoadImage.js",[],"/home/r1nku/codes/personal/robosocial/client/src/utilities/overflowToggler.js",[],"/home/r1nku/codes/personal/robosocial/client/src/redux/profile/ProfileActions.js",[],"/home/r1nku/codes/personal/robosocial/client/src/utilities/clearNotification.js",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Navbar/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/UnfollowPrompt/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/ProfileSummary/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/PostsGrid/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/UserListView/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Register/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/PostUploadView/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/TwoColumnLayout/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/LoginPrompt/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/CommentsView/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Post/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Feed/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/CommentInput/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Login/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Navbar/Navbar.tsx",["414","415","416","417","418"],"import { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport Badge from \"@material-ui/core/Badge\";\nimport firestore from \"../../firebase/firestore\";\nimport Logo from \"../Logo\";\nimport { FiUser, FiX } from \"react-icons/fi\";\nimport SearchUsers from \"../SearchUsers\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage.js\";\nimport ProfilePicPlaceholder from \"../../assets/avatar.jpg\";\nimport * as userActions from \"../../redux/user/userActions\";\nimport { AiOutlineHome, AiOutlineBell, AiOutlineCompass } from \"react-icons/ai\";\n\ntype NavbarTypes = {\n  currentUsername: string;\n  currentUserUid: string;\n  currentUserProfileImage: string;\n  LOGOUT: Function;\n};\n\nfunction useOutsideAlerter(ref: any, toggle: any) {\n  useEffect(() => {\n    function handleClickOutside(event: any) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        toggle();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nconst Navbar = ({ currentUsername, currentUserUid, currentUserProfileImage, LOGOUT }: NavbarTypes) => {\n  const [notificationsCount, setNotificationsCount] = useState(0);\n\n  const [showSearchBox, setShowSearchBox] = useState(false);\n  const [showProfileOptions, setShowProfileOptions] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (currentUserUid) {\n      firestore\n        .collection(currentUserUid)\n        .doc(\"notifications\")\n        .onSnapshot((doc) => {\n          const data = [];\n          for (let e in doc.data()) {\n            data.push(e);\n          }\n          setNotificationsCount(data.length);\n        });\n    }\n  }, []);\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, () => setShowProfileOptions(false));\n\n  return (\n    <nav className=\"z-10 fixed top-0 left-0 w-screen flex items-center justify-center border-b h-[50px] bg-white\">\n      {!showSearchBox ? (\n        <div className=\"w-[90%] md:w-[70%] flex items-center justify-between\">\n          <>\n            <ul className=\"flex items-center gap-2\">\n              <NavLink to=\"/\">\n                <Logo />\n              </NavLink>\n\n              <NavLink to=\"/explore\" exact activeStyle={{ color: \"#018e23\" }}>\n                <AiOutlineCompass size={25} />\n              </NavLink>\n            </ul>\n\n            <ul>\n              {currentUsername && (\n                <div className=\"flex items-center gap-6\">\n                  <NavLink to=\"/\" exact activeStyle={{ color: \"#018e23\" }}>\n                    <AiOutlineHome size={25} />\n                  </NavLink>\n\n                  <NavLink to=\"/notifications\" exact activeStyle={{ color: \"#018e23\" }}>\n                    <Badge badgeContent={notificationsCount} color=\"error\" style={{ marginTop: \"-4px\" }}>\n                      <AiOutlineBell size={25} />\n                    </Badge>\n                  </NavLink>\n\n                  <NavLink to={`/user/${currentUsername}`} exact activeStyle={{ color: \"#018e23\" }}>\n                    <img\n                      data-src={currentUserProfileImage}\n                      src={ProfilePicPlaceholder}\n                      className={`lazy-image h-[25px] w-[25px] rounded-full object-cover`}\n                      onLoad={lazyLoadImage}\n                      alt=\"profile image\"\n                    />\n                  </NavLink>\n\n                  {/* <div ref={wrapperRef} className=\"relative mt-1\">\n                    <button onClick={() => setShowProfileOptions((prev) => !prev)}>\n                      <img\n                        data-src={currentUserProfileImage}\n                        src={ProfilePicPlaceholder}\n                        className={`lazy-image h-6 w-6 rounded-full`}\n                        onLoad={lazyLoadImage}\n                        alt=\"profile image\"\n                      />\n                    </button>\n\n                    {showProfileOptions && (\n                      <ProfileOptionsModal\n                        toggle={() => setShowProfileOptions(false)}\n                        LOGOUT={Logout}\n                        currentUsername={currentUsername}\n                      />\n                    )}\n                  </div> */}\n                </div>\n              )}\n\n              {!currentUsername && (\n                <NavLink to=\"/\" exact>\n                  <FiUser size={25} />\n                </NavLink>\n              )}\n            </ul>\n          </>\n        </div>\n      ) : (\n        <section\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"300px\",\n          }}\n        >\n          <SearchUsers closeFunc={() => setShowSearchBox(false)} />\n          <button onClick={() => setShowSearchBox(false)}>\n            <FiX />\n          </button>\n        </section>\n      )}\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    currentUserUid: state.user.currentUserData.uid,\n    currentUsername: state.user.currentUserData.username,\n    currentUserProfileImage: state.user.currentUserData.profile_image_url,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    LOGOUT: () => dispatch(userActions.LOGOUT()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","/home/r1nku/codes/personal/robosocial/client/src/components/PostsGrid/PostsGrid.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/UnfollowPrompt/UnfollowPrompt.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Register/Register.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/PostUploadView/PostUploadView.tsx",["419","420"],"import styles from \"./PostUploadView.module.scss\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useCallback } from \"react\";\nimport { FiImage } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as postsActions from \"../../redux/post/postsActions\";\nimport Modal from \"../Modal\";\n\ntype PostUploadModalTypes = {\n  UPLOAD_POST: any;\n  toggle: any;\n  currentUserUid: any;\n  currentUsername: any;\n  currentUserProfileImage: any;\n};\n\nconst PostUploadModal = ({\n  UPLOAD_POST,\n  toggle,\n  currentUserUid,\n  currentUsername,\n  currentUserProfileImage,\n}: PostUploadModalTypes) => {\n  const [files, setFiles] = useState<any[]>([]);\n  const [status, setStatus] = useState(\"\");\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setFiles(\n      acceptedFiles.map((file: any) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      )\n    );\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  const thumbs = files.map((file: any) => (\n    <div key={file.name}>\n      <div>\n        <img src={file.preview} className=\"w-full\" />\n      </div>\n    </div>\n  ));\n\n  const uploadPost = () => {\n    if (files) {\n      if ([\"jpg\", \"png\", \"jpeg\"].includes(files[0].name.slice(files[0].name.lastIndexOf(\".\") + 1))) {\n        toggle();\n        UPLOAD_POST({\n          owner_uid: currentUserUid,\n          status: status,\n          currentUsername: currentUsername,\n          image: files[0],\n          posted_date: new Date(),\n          currentUserProfileImage: currentUserProfileImage,\n        });\n      } else {\n        alert(\"Image must be on jpg,png or jpeg format.\");\n      }\n    }\n  };\n\n  return (\n    <Modal title=\"Add Post\" onClose={toggle}>\n      <div className=\"text-sm flex flex-col items-center\">\n        {files.length < 1 && (\n          <section {...getRootProps()} className=\"flex flex-col items-center gap-5\">\n            <input {...getInputProps()} />\n            {isDragActive ? (\n              <p>Drop the files here ...</p>\n            ) : (\n              <>\n                <FiImage size={50} />\n                <p>Drop your Image here</p>\n                <button className=\"text-white px-5 py-1 bg-[#018e23]\">Select from device</button>\n              </>\n            )}\n          </section>\n        )}\n\n        {files.length > 0 && (\n          <section className=\"flex flex-col gap-5 w-full\">\n            <span className=\"flex items-center justify-between\">\n              <input\n                type=\"text\"\n                value={status}\n                className=\"ml-1\"\n                onChange={(e) => setStatus(e.target.value)}\n                placeholder=\"Status(optional)...\"\n              />\n              <button className=\"text-[#018e23]\" onClick={uploadPost}>\n                Submit\n              </button>\n            </span>\n\n            {thumbs}\n          </section>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    currentUsername: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n    currentUserProfileImage: state.user.currentUserData.profile_image_url,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    UPLOAD_POST: (post_data: any) => dispatch(postsActions.UPLOAD_POST(post_data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostUploadModal);\n","/home/r1nku/codes/personal/robosocial/client/src/components/LoginPrompt/LoginPrompt.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/TwoColumnLayout/TwoColumnLayout.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/UserListView/UserListView.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/ProfileSummary/ProfileSummary.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/CommentsView/CommentsView.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/CommentInput/CommentInput.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Feed/Feed.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Post/Post.tsx",["421"],"import { Fragment, useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as postsActions from \"../../redux/post/postsActions\";\nimport UserListView from \"../UserListView\";\nimport Moment from \"react-moment\";\nimport overflowToggler from \"../../utilities/overflowToggler\";\nimport PostOptionsModal from \"../PostOptionsModal\";\nimport placeholderImage from \"../../assets/placeholder.jpg\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage.js\";\nimport ProfilePicPlaceholder from \"../../assets/avatar.jpg\";\nimport { AiOutlineHeart, AiFillHeart, AiOutlineComment, AiOutlineShareAlt } from \"react-icons/ai\";\nimport { BiDotsHorizontal } from \"react-icons/bi\";\n\ntype PostTypes = {\n  post_commentsCount: number;\n  post_image: string;\n  post_likesCount: number;\n  post_dislikesCount: number;\n  post_postedDate: string;\n  post_status: string;\n  post_id: string;\n  post_owner_uid: string;\n  post_uid: string;\n  poster_profileImage: string;\n  poster_username: string;\n  haveISaved: boolean;\n  haveILiked: boolean;\n  haveIDisliked: boolean;\n  currentUsername: string;\n  currentUserUid: string;\n  currentUserProfileimage: string;\n  LIKE_POST: any;\n  UNLIKE_POST: any;\n  DISLIKE_POST: any;\n  UNDISLIKE_POST: any;\n  UNSAVE_POST: any;\n  SAVE_POST: any;\n  GET_LIKERS: any;\n  feedPosts: any;\n  likersLoading: any;\n  DELETE_POST: any;\n  ADD_MESSAGE: any;\n  toggleLoginPrompt?: any;\n  fullHeightPostImage?: boolean;\n};\n\nfunction useOutsideAlerter(ref: any, toggle: any) {\n  useEffect(() => {\n    function handleClickOutside(event: any) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        toggle();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nconst Post = ({\n  post_commentsCount,\n  post_image,\n  post_likesCount,\n  post_dislikesCount,\n  post_postedDate,\n  post_status,\n  post_id,\n  post_owner_uid,\n  post_uid,\n  poster_profileImage,\n  poster_username,\n  haveISaved,\n  haveILiked,\n  haveIDisliked,\n  currentUsername,\n  currentUserUid,\n  currentUserProfileimage,\n  LIKE_POST,\n  UNLIKE_POST,\n  DISLIKE_POST,\n  UNDISLIKE_POST,\n  UNSAVE_POST,\n  SAVE_POST,\n  GET_LIKERS,\n  feedPosts,\n  likersLoading,\n  DELETE_POST,\n  ADD_MESSAGE,\n  toggleLoginPrompt,\n  fullHeightPostImage,\n}: PostTypes) => {\n  const thisPostLikers = feedPosts.filter((post: any) => post.post_uid === post_uid)[0]?.post_likers;\n  const [showLikers, setShowLikers] = useState(false);\n  const [showPostOptionsModal, setShowPostOptionsModal] = useState(false);\n\n  const history = useHistory();\n\n  const likeUnlikePost = () => {\n    if (currentUsername) {\n      if (haveILiked) {\n        UNLIKE_POST(post_uid);\n      } else {\n        if (haveIDisliked) {\n          UNDISLIKE_POST(post_uid);\n        }\n        LIKE_POST(post_uid, currentUserUid, post_owner_uid);\n      }\n    } else {\n      toggleLoginPrompt();\n    }\n  };\n\n  // const dislikeUndislikePost = () => {\n  //   if (currentUsername) {\n  //     if (haveIDisliked) {\n  //       UNDISLIKE_POST(post_uid);\n  //     } else {\n  //       if (haveILiked) {\n  //         UNLIKE_POST(post_uid);\n  //       }\n  //       DISLIKE_POST(post_uid, currentUserUid, post_owner_uid);\n  //     }\n  //   } else {\n  //     toggleLoginPrompt();\n  //   }\n  // };\n\n  /*const saveUnsavePost = () => {\n    if (haveISaved) {\n      UNSAVE_POST(post_uid, currentUsername);\n    } else {\n      SAVE_POST(post_uid, currentUsername);\n    }\n  };\n  \n  const getLikers = () => {\n    toggleModal(setShowLikers);\n    if (!thisPostLikers) {\n      GET_LIKERS(post_uid);\n    }\n  };*/\n\n  const toggleModal = (setShowModal: any) => {\n    overflowToggler();\n    setShowModal((prev: any) => !prev);\n  };\n\n  const deletePost = () => {\n    DELETE_POST(post_uid);\n  };\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, () => setShowPostOptionsModal(false));\n\n  const copyToClipBoard = () => {\n    navigator.clipboard.writeText(`https://uns0cial.web.app/p/${post_id}`);\n    ADD_MESSAGE(\"Post link copied.\");\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-[100%] bg-white md:px-5 border-b-0 last:border-b py-5 text-sm border\">\n        {!post_id && !post_owner_uid ? (\n          <p className=\"my-[123px] flex flex-col items-center\">Post deleted or never existed.</p>\n        ) : (\n          <Fragment>\n            <section className=\"px-2 md:px-0 flex items-center justify-between border-b mb-4\">\n              <span className=\"flex items-center gap-1 mb-4\">\n                <img\n                  data-src={poster_profileImage}\n                  src={ProfilePicPlaceholder}\n                  className=\"lazy-image h-8 w-8 rounded-full mr-1 object-cover\"\n                  onLoad={lazyLoadImage}\n                  alt=\"post_user_image\"\n                />\n                <Link className=\"hover:underline\" to={`/user/${poster_username}`}>\n                  {poster_username}\n                </Link>\n                &#183;\n                <p>\n                  <Moment fromNow>{post_postedDate}</Moment>\n                </p>\n              </span>\n\n              <div className=\"relative\" ref={wrapperRef}>\n                <button onClick={() => setShowPostOptionsModal((prev) => !prev)}>\n                  <BiDotsHorizontal size={20} />\n                </button>\n\n                {showPostOptionsModal && (\n                  <Fragment>\n                    <PostOptionsModal\n                      hideGoToPost={fullHeightPostImage}\n                      toggle={() => setShowPostOptionsModal((prev) => !prev)}\n                      isMyPost={poster_username === currentUsername}\n                      deletePost={deletePost}\n                      post_id={post_id}\n                      AddMessage={ADD_MESSAGE}\n                    />\n                  </Fragment>\n                )}\n              </div>\n            </section>\n\n            <p className=\"mb-2 px-2 md:px-0 \">{post_status}</p>\n\n            <section>\n              <Link to={`/p/${post_id}`}>\n                <img\n                  className=\"lazy-image w-full\"\n                  src={placeholderImage}\n                  alt=\"post_main_img\"\n                  data-src={post_image}\n                  onLoad={lazyLoadImage}\n                  style={fullHeightPostImage ? { height: \"auto\" } : { maxHeight: \"500px\", objectFit: \"cover\" }}\n                />\n              </Link>\n            </section>\n\n            <section className=\"flex items-center gap-4 mt-4 px-2 md:px-0 \">\n              <button className=\"flex items-center gap-1\" onClick={likeUnlikePost}>\n                {haveILiked ? <AiFillHeart color=\"#EE323D\" size={20} /> : <AiOutlineHeart size={20} />}\n                <p>{typeof post_likesCount === \"object\" || post_likesCount === 0 ? \"\" : post_likesCount}</p>\n              </button>\n\n              {/* <button className=\"flex items-center\" onClick={dislikeUndislikePost} style={haveIDisliked ? { color: \"tomato\" } : undefined}>\n            <FiThumbsDown />\n            <p> {typeof post_dislikesCount === \"object\" || post_dislikesCount === 0 ? \"\" : post_dislikesCount}</p>\n          </button> */}\n\n              <button className=\"flex items-center gap-1\" onClick={() => history.push(`/p/${post_id}`)}>\n                <AiOutlineComment size={20} />\n                <p> {typeof post_commentsCount === \"object\" || post_commentsCount === 0 ? \"\" : post_commentsCount}</p>\n              </button>\n\n              <button className=\"flex items-center\" onClick={copyToClipBoard}>\n                <AiOutlineShareAlt size={20} />\n              </button>\n            </section>\n\n            {/*<p>{post_status}</p>\n      \n\n      <div>\n        <button onClick={getLikers}>\n          {post_likesCount || \"No\"} {post_likesCount === 1 ? \"like\" : \"likes\"}\n        </button>\n        <button onClick={() => history.push(`/p/${post_id}`)}>\n          {post_commentsCount}{\" \"}\n          {post_commentsCount === 1 ? \"comment\" : \"comments\"}\n        </button>\n      </div>\n\n      <div>\n       \n      </div>\n  */}\n          </Fragment>\n        )}\n      </div>\n\n      {showLikers && (\n        <Fragment>\n          <UserListView\n            title=\"Likes\"\n            loading={likersLoading}\n            users={thisPostLikers || []}\n            toggle={() => toggleModal(setShowLikers)}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    likersLoading: state.posts.loading_likers,\n    feedPosts: state.posts.posts.filter((post: any) => post.infeed === true),\n    currentUsername: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n    currentUserProfileimage: state.user.currentUserData.profile_image_url,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    ADD_MESSAGE: (message: any) => dispatch(postsActions.ADD_MESSAGE(message)),\n    DELETE_POST: (post_uid: any) => dispatch(postsActions.DELETE_POST(post_uid)),\n    GET_LIKERS: (post_uid: any) => dispatch(postsActions.GET_LIKERS(post_uid)),\n    SAVE_POST: (post_uid: any, saver_username: any) => dispatch(postsActions.SAVE_POST(post_uid, saver_username)),\n    UNSAVE_POST: (post_uid: any, unsaver_username: any) =>\n      dispatch(postsActions.UNSAVE_POST(post_uid, unsaver_username)),\n    LIKE_POST: (post_uid: any, post_owner_uid: any) => dispatch(postsActions.LIKE_POST(post_uid, post_owner_uid)),\n    UNLIKE_POST: (post_uid: any) => dispatch(postsActions.UNLIKE_POST(post_uid)),\n    DISLIKE_POST: (post_uid: any, post_owner_uid: any) => dispatch(postsActions.DISLIKE_POST(post_uid, post_owner_uid)),\n    UNDISLIKE_POST: (post_uid: any) => dispatch(postsActions.UNDISLIKE_POST(post_uid)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","/home/r1nku/codes/personal/robosocial/client/src/components/Login/Login.tsx",["422"],"import { useState, useEffect, FormEvent } from \"react\";\nimport Form from \"../Form\";\nimport * as userActions from \"../../redux/user/userActions\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\ntype LoginProps = {\n  error: string;\n  loading: boolean;\n  currentUsername: String;\n  LOGIN: Function;\n};\n\nconst Login = ({\n  error,\n  loading,\n  currentUsername,\n  LOGIN,\n}: LoginProps) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n\n  const login = (e: FormEvent) => {\n    e.preventDefault();\n    LOGIN(username, password);\n  };\n\n  useEffect(() => {\n    if (currentUsername) {\n      history.push(\"/\");\n    }\n  }, [currentUsername]);\n\n  return (\n    <Form\n      username={username}\n      onUsernameChange={setUsername}\n      password={password}\n      onPasswordChange={setPassword}\n      formType=\"Login\"\n      errorMessage={error}\n      onFormSubmit={login}\n      onEmailChange={() => {}}\n      onRepeatPasswordChange={() => {}}\n      loading={loading}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    error: state.user.error,\n    loading: state.user.loading,\n    currentUsername: state.user.currentUserData.username,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    LOGIN: (username: string, password: string) =>\n      dispatch(userActions.LOGIN(username, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/home/r1nku/codes/personal/robosocial/client/src/utilities/formValidator.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Logo/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/SearchUsers/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Modal/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Comment/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/PostOptionsModal/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/RecommendedSideview/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/LogoutPrompt/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Form/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/SettingsModal/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Logo/Logo.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/SearchUsers/SearchUsers.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Modal/Modal.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/RecommendedSideview/RecommendedSideView.tsx",["423","424"],"import { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as userActions from \"../../redux/user/userActions\";\n\nfunction RecommendedSideview({ recommendedUsers, GET_RECOMMENDED_USERS, recommendedLoaded }: any) {\n  useEffect(() => {\n    if (!recommendedLoaded) GET_RECOMMENDED_USERS();\n  }, []);\n\n  return (\n    <Fragment>\n      <section className=\"bg-white border py-3 text-sm\">\n        <p className=\"border-b pb-2 px-5\">People you may like to follow</p>\n\n        <div className=\"mt-5 flex flex-col gap-4 px-5 pb-2\">\n          {recommendedUsers?.slice(0, 5)?.map((user: any) => {\n            return (\n              <Link to={`/user/${user.username}`} className=\"flex items-center gap-2 hover:underline\">\n                <img className=\"w-8 h-8 rounded-full object-cover\" src={user.profile_image_url} />\n                <p>{user.username}</p>\n              </Link>\n            );\n          })}\n        </div>\n      </section>\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    recommendedLoaded: state.user.recommendedLoaded,\n    recommendedUsers: state.user.recommendedUsers || [],\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    GET_RECOMMENDED_USERS: () => dispatch(userActions.GET_RECOMMENDED()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecommendedSideview);\n","/home/r1nku/codes/personal/robosocial/client/src/components/PostOptionsModal/PostOptionsModal.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/LogoutPrompt/LogoutPrompt.tsx",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Comment/Comment.tsx",["425","426"],"import { Fragment, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport overflowToggler from \"../../utilities/overflowToggler\";\nimport UserListView from \"./../UserListView\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage.js\";\nimport ProfilePicPlaceholder from \"../../assets/avatar.jpg\";\nimport Moment from \"react-moment\";\nimport { AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\n\ntype CommentTypes = {\n  comments: any;\n  comment: any;\n  likeUnlikeComment: any;\n  currentUserUid: string;\n  currentUsername: string;\n  deleteComment: any;\n  getCommentLikers: any;\n  gettingCommentLikers: boolean;\n};\n\nconst Comment = ({\n  comments,\n  comment,\n  likeUnlikeComment,\n  currentUserUid,\n  currentUsername,\n  deleteComment,\n  getCommentLikers,\n  gettingCommentLikers,\n}: CommentTypes) => {\n  const [showCommentLikers, setShowCommentLikers] = useState(false);\n  const commentLikers = comments.filter((cmt: any) => cmt.comment_uid === comment.comment_uid)[0]?.likers;\n\n  const toggleModal = (setModal: any) => {\n    setModal((prev: any) => !prev);\n    overflowToggler();\n  };\n\n  const loadCommentLikers = () => {\n    toggleModal(setShowCommentLikers);\n    if (!commentLikers) {\n      getCommentLikers(comment.comment_uid);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"flex items-start text-sm my-5\">\n        <img\n          data-src={comment.poster_profile_image}\n          src={ProfilePicPlaceholder}\n          className=\"lazy-image h-7 w-7 rounded-full object-cover\"\n          onLoad={lazyLoadImage}\n          alt=\"profile-image\"\n        />\n\n        <div className=\"flex flex-col items-start ml-2 gap-1\">\n          <div className=\"flex items-center\">\n            <p className=\"font-bold hover:underline\">\n              <NavLink to={`/user/${comment.poster_username}`}>{comment.poster_username}</NavLink>\n            </p>\n            <p className=\"ml-2 break-all\">{comment.comment}</p>\n          </div>\n\n          <div className=\"flex gap-1\">\n            <p>\n              <Moment fromNow>{comment.posted_date}</Moment>\n            </p>\n            <span>&#183;</span>\n            <button\n              className=\"flex items-center gap-1\"\n              onClick={() => likeUnlikeComment(comment.liked_by_me ? \"unlike\" : \"like\", comment.comment_uid)}\n            >\n              {comment.liked_by_me ? <AiFillHeart color=\"#EE323D\" size={15} /> : <AiOutlineHeart size={15} />}\n              {comment.comment_likes_count || 0}\n            </button>\n\n            {(currentUserUid === comment.post_owner_uid || currentUsername === comment.poster_username) && (\n              <>\n                <span>&#183;</span>\n\n                <button className=\"hover:text-[#EE323D]\" onClick={() => deleteComment(comment.comment_uid)}>\n                  delete\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {showCommentLikers ? (\n        <Fragment>\n          <UserListView\n            title=\"Likes\"\n            loading={gettingCommentLikers}\n            toggle={() => toggleModal(setShowCommentLikers)}\n            users={commentLikers || []}\n          />\n        </Fragment>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default Comment;\n","/home/r1nku/codes/personal/robosocial/client/src/components/Form/Form.tsx",["427"],"/home/r1nku/codes/personal/robosocial/client/src/components/SettingsModal/SettingsModal.tsx",["428"],"import { FormEvent, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateUserData, updateProfilePicture, updatePassword } from \"../../services/userServices\";\nimport storage from \"../../firebase/storage\";\nimport Compressor from \"compressorjs\";\nimport * as postActions from \"../../redux/post/postsActions\";\nimport * as userActions from \"../../redux/user/userActions\";\nimport Modal from \"../Modal\";\n\ntype SettingsModalProps = {\n  currentUserProfileImage: string;\n  currentUserName: string;\n  currentUserUid: string;\n  currentUserBio: string;\n  currentUserEmail: string;\n  ADD_MESSAGE: Function;\n  UPDATE_PROFILE_LOCALLY: Function;\n  onClose: () => void;\n};\n\nconst SettingsModal = ({\n  currentUserProfileImage,\n  currentUserName,\n  currentUserUid,\n  currentUserBio,\n  currentUserEmail,\n  ADD_MESSAGE,\n  UPDATE_PROFILE_LOCALLY,\n  onClose,\n}: SettingsModalProps) => {\n  const [mode, setMode] = useState(1);\n\n  const [username, setUsername] = useState(currentUserName);\n  const [email, setEmail] = useState(currentUserEmail);\n  const [bio, setBio] = useState(currentUserBio);\n  const [updating, setUpdating] = useState(false);\n  const [updatingProfilePicture, setUpdatingProfilePicture] = useState(false);\n\n  //image file\n  const [selectedImage, setSelectedImage] = useState<File | null>(null);\n  const newImage = selectedImage ? URL.createObjectURL(selectedImage) : null;\n\n  const updateImage = (e: FormEvent) => {\n    const files = (e.target as HTMLInputElement).files;\n    if (!files) return;\n    let file = files[0] || \"\";\n    if (file) {\n      if ([\"jpg\", \"png\", \"jpeg\"].includes(file.name.slice(file.name.indexOf(\".\") + 1))) {\n        setSelectedImage(file);\n      } else {\n        ADD_MESSAGE(\"Image must be on jpg,png or jpeg format.\");\n      }\n    }\n\n    setTimeout(() => {\n      ADD_MESSAGE(null);\n    }, 3000);\n  };\n\n  const updateProfilePictureFinal = () => {\n    if (selectedImage && !updatingProfilePicture) {\n      setUpdatingProfilePicture(true);\n      new Compressor(selectedImage, {\n        quality: 0.6,\n        success(result: any) {\n          const uploadedImage = storage.ref(`/profilePics/${currentUserUid}/${result.name}`).put(result);\n          uploadedImage.on(\n            \"state_changed\",\n            (snapshot) => {},\n            (err) => console.log(err),\n            () => {\n              storage\n                .ref(`/profilePics/${currentUserUid}`)\n                .child(result.name)\n                .getDownloadURL()\n                .then((url) => {\n                  updateProfilePicture(currentUserUid, url)\n                    .then((res) => {\n                      if (res === \"done\") {\n                        ADD_MESSAGE(\"Successfully updated the profile picture\");\n                      } else {\n                        ADD_MESSAGE(res);\n                      }\n                      setUpdating(false);\n                    })\n                    .catch((err) => ADD_MESSAGE(err.message));\n                });\n            }\n          );\n        },\n      });\n    }\n  };\n\n  const updateProfile = (e: any) => {\n    e.preventDefault();\n    setUpdating(true);\n\n    if (username === currentUserName && email === currentUserEmail && bio === currentUserBio) {\n      ADD_MESSAGE(\"Nothing to update.\");\n      setUpdating(false);\n    } else {\n      if (!username.trim().includes(\" \") && username.trim().length >= 5 && username.trim().length <= 25) {\n        updateUserData(username.trim().toLowerCase(), email || \"\", bio || \"\", currentUserName).then((res) => {\n          if (res !== \"success\") {\n            ADD_MESSAGE(res);\n          } else {\n            onClose()\n            ADD_MESSAGE(\"Successfully updated the profile.\");\n            UPDATE_PROFILE_LOCALLY({ bio, username, email });\n          }\n          setUpdating(false);\n        });\n      } else {\n        setUpdating(false);\n        ADD_MESSAGE(\"Username must be spaceless between 5 and 25 characters.\");\n      }\n    }\n  };\n\n  //for password update\n  const [initialPassword, setInitialPassword] = useState(\"\");\n  const [newPassword1, setNewPassword1] = useState(\"\");\n  const [newPassword2, setNewPassword2] = useState(\"\");\n\n  const updatePasswordFinal = (e: any) => {\n    e.preventDefault();\n    setUpdating(true);\n    if (newPassword1 === newPassword2) {\n      if (newPassword1.trim().length >= 5 && newPassword1.trim().length <= 25) {\n        updatePassword(currentUserUid, initialPassword, newPassword1).then((res) => {\n          setUpdating(false);\n          if (res === \"success\") {\n            ADD_MESSAGE(\"Successfully changed password\");\n            setInitialPassword(\"\");\n            setNewPassword1(\"\");\n            setNewPassword2(\"\");\n            onClose();\n          } else {\n            ADD_MESSAGE(res);\n          }\n        });\n      } else {\n        setUpdating(false);\n        ADD_MESSAGE(\"new passwords must be between 5 to 25 characters.\");\n      }\n    } else {\n      setUpdating(false);\n      ADD_MESSAGE(\"new passwords must match.\");\n    }\n  };\n\n  return (\n    <Modal title=\"Settings\" onClose={onClose}>\n      <div>\n        <div className=\"flex items-center gap-5 border-b pb-2\">\n          <button onClick={() => setMode(1)} className={mode === 1 ? \"text-[#018e23]\" : \"\"}>\n            Update Profile\n          </button>\n          <button onClick={() => setMode(2)} className={mode === 2 ? \"text-[#018e23]\" : \"\"}>\n            Change Password\n          </button>\n        </div>\n\n        {mode === 1 && (\n          <div>\n            <section className=\"flex items-start mt-5 gap-2\">\n              <img\n                className=\"h-7 w-7 rounded-full object-cover\"\n                src={newImage || currentUserProfileImage}\n                alt=\"profile-image\"\n              />\n\n              <div>\n                <p>{currentUserName}</p>\n                <label className=\"text-[#EE323D]\" htmlFor=\"image\" style={newImage ? { display: \"none\" } : undefined}>\n                  change profile photo\n                </label>\n                <label htmlFor=\"u-btn\" style={!newImage ? { display: \"none\" } : undefined}>\n                  {updatingProfilePicture ? \"Updating Profile Picture..\" : \"Confirm New Profile Photo\"}\n                </label>\n                <button style={{ display: \"none\" }} id=\"u-btn\" onClick={updateProfilePictureFinal}>\n                  Update Profile Photo\n                </button>\n                <input type=\"file\" style={{ display: \"none\" }} id=\"image\" onChange={updateImage} accept=\"image/*\" />\n              </div>\n            </section>\n\n            <form onSubmit={updateProfile} className=\"flex flex-col gap-3 mt-5\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                className=\"text-sm border px-2 py-[6px] focus:border-[#24B35A]\"\n                value={username.toLowerCase()}\n                id=\"username\"\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <label htmlFor=\"email\">Email</label>\n              <input\n                className=\"text-sm border px-2 py-[6px] focus:border-[#24B35A]\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"Bio\">Bio</label>\n              <textarea\n                className=\"text-sm border px-2 py-[6px] focus:border-[#24B35A]\"\n                onChange={(e) => setBio(e.target.value)}\n              >\n                {bio}\n              </textarea>\n\n              <button\n                className=\"text-sm mt-5 bg-[#018e23] text-white py-[6px] disabled:cursor-default\"\n                disabled={updating}\n                onClick={updateProfile}\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n        )}\n\n        {mode === 2 && (\n          <form onSubmit={updatePasswordFinal} className=\"flex flex-col gap-3 mt-5\">\n            <label htmlFor=\"password1\">Current Password</label>\n            <input\n              type=\"password\"\n              className=\"text-sm border px-2 py-[6px] focus:border-[#24B35A]\"\n              value={initialPassword}\n              id=\"username\"\n              onChange={(e) => setInitialPassword(e.target.value)}\n            />\n            <label htmlFor=\"password2\">New Password</label>\n            <input\n              className=\"text-sm border px-2 py-[6px] focus:border-[#24B35A]\"\n              type=\"password\"\n              value={newPassword1}\n              onChange={(e) => setNewPassword1(e.target.value)}\n            />\n            <label htmlFor=\"password3\">Retype New Password</label>\n            <input\n              className=\"text-sm border px-2 py-[6px] focus:border-[#24B35A]\"\n              type=\"password\"\n              value={newPassword2}\n              onChange={(e) => setNewPassword2(e.target.value)}\n            />\n            <button\n              className=\"text-sm mt-5 bg-[#018e23] text-white py-[6px] disabled:cursor-default\"\n              disabled={updating}\n            >\n              Submit\n            </button>\n          </form>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    currentUserEmail: state.user.currentUserData.email,\n    currentUserBio: state.user.currentUserData.bio,\n    currentUserProfileImage: state.user.currentUserData.profile_image_url,\n    currentUserName: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    UPDATE_PROFILE_LOCALLY: (data: any) => dispatch(userActions.UPDATE_PROFILE_LOCALLY(data)),\n    ADD_MESSAGE: (message: any) => dispatch(postActions.ADD_MESSAGE(message)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsModal);\n","/home/r1nku/codes/personal/robosocial/client/src/components/Backdrop/index.ts",[],"/home/r1nku/codes/personal/robosocial/client/src/components/Backdrop/Backdrop.tsx",[],{"ruleId":"429","replacedBy":"430"},{"ruleId":"431","replacedBy":"432"},{"ruleId":"429","replacedBy":"430"},{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","severity":1,"message":"434","line":61,"column":6,"nodeType":"435","endLine":61,"endColumn":21,"suggestions":"436"},{"ruleId":"433","severity":1,"message":"437","line":85,"column":6,"nodeType":"435","endLine":85,"endColumn":13,"suggestions":"438"},{"ruleId":"433","severity":1,"message":"439","line":91,"column":6,"nodeType":"435","endLine":91,"endColumn":15,"suggestions":"440"},{"ruleId":"441","severity":1,"message":"442","line":13,"column":11,"nodeType":"443","messageId":"444","endLine":13,"endColumn":100,"fix":"445"},{"ruleId":"433","severity":1,"message":"446","line":18,"column":6,"nodeType":"435","endLine":18,"endColumn":8,"suggestions":"447"},{"ruleId":"433","severity":1,"message":"448","line":102,"column":6,"nodeType":"435","endLine":102,"endColumn":39,"suggestions":"449"},{"ruleId":"433","severity":1,"message":"450","line":32,"column":6,"nodeType":"435","endLine":32,"endColumn":8,"suggestions":"451"},{"ruleId":"452","severity":1,"message":"453","line":12,"column":9,"nodeType":"443","endLine":12,"endColumn":74},{"ruleId":"454","severity":1,"message":"455","line":8,"column":10,"nodeType":"456","messageId":"457","endLine":8,"endColumn":23},{"ruleId":"454","severity":1,"message":"458","line":8,"column":25,"nodeType":"456","messageId":"457","endLine":8,"endColumn":41},{"ruleId":"433","severity":1,"message":"459","line":97,"column":6,"nodeType":"435","endLine":97,"endColumn":16,"suggestions":"460"},{"ruleId":"433","severity":1,"message":"461","line":108,"column":6,"nodeType":"435","endLine":108,"endColumn":38,"suggestions":"462"},{"ruleId":"433","severity":1,"message":"463","line":35,"column":6,"nodeType":"435","endLine":35,"endColumn":11,"suggestions":"464"},{"ruleId":"454","severity":1,"message":"465","line":42,"column":10,"nodeType":"456","messageId":"457","endLine":42,"endColumn":28},{"ruleId":"454","severity":1,"message":"466","line":44,"column":9,"nodeType":"456","messageId":"457","endLine":44,"endColumn":16},{"ruleId":"433","severity":1,"message":"450","line":59,"column":6,"nodeType":"435","endLine":59,"endColumn":8,"suggestions":"467"},{"ruleId":"468","severity":1,"message":"469","line":93,"column":21,"nodeType":"443","endLine":99,"endColumn":23},{"ruleId":"454","severity":1,"message":"470","line":1,"column":8,"nodeType":"456","messageId":"457","endLine":1,"endColumn":14},{"ruleId":"452","severity":1,"message":"453","line":43,"column":9,"nodeType":"443","endLine":43,"endColumn":54},{"ruleId":"433","severity":1,"message":"463","line":62,"column":6,"nodeType":"435","endLine":62,"endColumn":11,"suggestions":"471"},{"ruleId":"433","severity":1,"message":"472","line":34,"column":6,"nodeType":"435","endLine":34,"endColumn":23,"suggestions":"473"},{"ruleId":"433","severity":1,"message":"474","line":9,"column":6,"nodeType":"435","endLine":9,"endColumn":8,"suggestions":"475"},{"ruleId":"452","severity":1,"message":"453","line":20,"column":17,"nodeType":"443","endLine":20,"endColumn":99},{"ruleId":"454","severity":1,"message":"476","line":39,"column":9,"nodeType":"456","messageId":"457","endLine":39,"endColumn":26},{"ruleId":"468","severity":1,"message":"469","line":49,"column":9,"nodeType":"443","endLine":55,"endColumn":11},{"ruleId":"477","severity":1,"message":"478","line":22,"column":10,"nodeType":"456","messageId":"479","endLine":22,"endColumn":14},{"ruleId":"468","severity":1,"message":"469","line":168,"column":15,"nodeType":"443","endLine":172,"endColumn":17},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ADD_MESSAGE' and 'feedLoaded'. Either include them or remove the dependency array. If 'ADD_MESSAGE' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["482"],"React Hook useEffect has missing dependencies: 'GET_FEED', 'GET_USER_DATA', and 'feedLoaded'. Either include them or remove the dependency array. If 'GET_USER_DATA' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["483"],"React Hook useEffect has a missing dependency: 'ADD_MESSAGE'. Either include it or remove the dependency array. If 'ADD_MESSAGE' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["484"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"485","text":"486"},"React Hook useEffect has a missing dependency: 'loaderWidth'. Either include it or remove the dependency array.",["487"],"React Hook useEffect has missing dependencies: 'GET_PROFILE_DATA' and 'profileData.length'. Either include them or remove the dependency array. If 'GET_PROFILE_DATA' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["488"],"React Hook useEffect has a missing dependency: 'currentUserUid'. Either include it or remove the dependency array.",["489"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","@typescript-eslint/no-unused-vars","'deleteComment' is defined but never used.","Identifier","unusedVar","'getCommentLikers' is defined but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["490"],"React Hook useEffect has missing dependencies: 'LOAD_POST' and 'currentPost.length'. Either include them or remove the dependency array. If 'LOAD_POST' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["491"],"React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array. If 'toggle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["492"],"'showProfileOptions' is assigned a value but never used.","'history' is assigned a value but never used.",["493"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'styles' is defined but never used.",["494"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["495"],"React Hook useEffect has missing dependencies: 'GET_RECOMMENDED_USERS' and 'recommendedLoaded'. Either include them or remove the dependency array. If 'GET_RECOMMENDED_USERS' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["496"],"'loadCommentLikers' is assigned a value but never used.","@typescript-eslint/no-redeclare","'Form' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},[536,536]," rel=\"noreferrer\"",{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"507","fix":"515"},{"desc":"513","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},"Update the dependencies array to be: [ADD_MESSAGE, feedLoaded, uploadingPost]",{"range":"521","text":"522"},"Update the dependencies array to be: [GET_FEED, GET_USER_DATA, feedLoaded, token]",{"range":"523","text":"524"},"Update the dependencies array to be: [ADD_MESSAGE, message]",{"range":"525","text":"526"},"Update the dependencies array to be: [loaderWidth]",{"range":"527","text":"528"},"Update the dependencies array to be: [profileUsername, currentUserUid, profileData.length, GET_PROFILE_DATA]",{"range":"529","text":"530"},"Update the dependencies array to be: [currentUserUid]",{"range":"531","text":"532"},"Update the dependencies array to be: [getComments, post_uid]",{"range":"533","text":"534"},"Update the dependencies array to be: [token, currentUserUid, post_id, currentPost.length, LOAD_POST]",{"range":"535","text":"536"},"Update the dependencies array to be: [ref, toggle]",{"range":"537","text":"538"},{"range":"539","text":"532"},{"range":"540","text":"538"},"Update the dependencies array to be: [currentUsername, history]",{"range":"541","text":"542"},"Update the dependencies array to be: [GET_RECOMMENDED_USERS, recommendedLoaded]",{"range":"543","text":"544"},[1675,1690],"[ADD_MESSAGE, feedLoaded, uploadingPost]",[2230,2237],"[GET_FEED, GET_USER_DATA, feedLoaded, token]",[2340,2349],"[ADD_MESSAGE, message]",[407,409],"[loaderWidth]",[3124,3157],"[profileUsername, currentUserUid, profileData.length, GET_PROFILE_DATA]",[1144,1146],"[currentUserUid]",[2560,2570],"[getComments, post_uid]",[2826,2858],"[token, currentUserUid, post_id, currentPost.length, LOAD_POST]",[1215,1220],"[ref, toggle]",[1895,1897],[1948,1953],[730,747],"[currentUsername, history]",[365,367],"[GET_RECOMMENDED_USERS, recommendedLoaded]"]