[{"/home/rinku/codes/unsocial/client/src/index.tsx":"1","/home/rinku/codes/unsocial/client/src/redux/store.js":"2","/home/rinku/codes/unsocial/client/src/components/App.tsx":"3","/home/rinku/codes/unsocial/client/src/redux/rootReducer.js":"4","/home/rinku/codes/unsocial/client/src/redux/user/userActions.js":"5","/home/rinku/codes/unsocial/client/src/redux/post/postsActions.js":"6","/home/rinku/codes/unsocial/client/src/redux/post/postsReducer.js":"7","/home/rinku/codes/unsocial/client/src/redux/user/userReducer.js":"8","/home/rinku/codes/unsocial/client/src/redux/profile/profileReducer.js":"9","/home/rinku/codes/unsocial/client/src/redux/user/userActionTypes.js":"10","/home/rinku/codes/unsocial/client/src/redux/post/postsActionTypes.js":"11","/home/rinku/codes/unsocial/client/src/redux/profile/profileActionTypes.js":"12","/home/rinku/codes/unsocial/client/src/services/userServices.js":"13","/home/rinku/codes/unsocial/client/src/services/authServices.js":"14","/home/rinku/codes/unsocial/client/src/services/profileServices.js":"15","/home/rinku/codes/unsocial/client/src/services/commentServices.js":"16","/home/rinku/codes/unsocial/client/src/utilities/notificationPusher.js":"17","/home/rinku/codes/unsocial/client/src/services/postsServices.js":"18","/home/rinku/codes/unsocial/client/src/components/Logo/index.ts":"19","/home/rinku/codes/unsocial/client/src/components/Layout/index.ts":"20","/home/rinku/codes/unsocial/client/src/components/MessageView/index.ts":"21","/home/rinku/codes/unsocial/client/src/pages/HomePage/index.ts":"22","/home/rinku/codes/unsocial/client/src/pages/ProfilePage/index.ts":"23","/home/rinku/codes/unsocial/client/src/pages/PostViewPage/index.ts":"24","/home/rinku/codes/unsocial/client/src/pages/LandingPage/index.ts":"25","/home/rinku/codes/unsocial/client/src/pages/RegisterPage/index.ts":"26","/home/rinku/codes/unsocial/client/src/pages/LoginPage/index.ts":"27","/home/rinku/codes/unsocial/client/src/pages/NotificationsPage/index.ts":"28","/home/rinku/codes/unsocial/client/src/firebase/firestore.js":"29","/home/rinku/codes/unsocial/client/src/firebase/storage.js":"30","/home/rinku/codes/unsocial/client/src/server_url.tsx":"31","/home/rinku/codes/unsocial/client/src/components/Logo/Logo.tsx":"32","/home/rinku/codes/unsocial/client/src/components/Layout/Layout.tsx":"33","/home/rinku/codes/unsocial/client/src/components/MessageView/MessageView.tsx":"34","/home/rinku/codes/unsocial/client/src/pages/HomePage/HomePage.tsx":"35","/home/rinku/codes/unsocial/client/src/pages/ProfilePage/ProfilePage.tsx":"36","/home/rinku/codes/unsocial/client/src/pages/PostViewPage/PostViewPage.tsx":"37","/home/rinku/codes/unsocial/client/src/pages/LandingPage/LandingPage.tsx":"38","/home/rinku/codes/unsocial/client/src/pages/RegisterPage/RegisterPage.tsx":"39","/home/rinku/codes/unsocial/client/src/pages/LoginPage/LoginPage.tsx":"40","/home/rinku/codes/unsocial/client/src/pages/NotificationsPage/NotificationsPage.tsx":"41","/home/rinku/codes/unsocial/client/src/firebase/firebase.js":"42","/home/rinku/codes/unsocial/client/src/utilities/lazyLoadImage.js":"43","/home/rinku/codes/unsocial/client/src/redux/profile/ProfileActions.js":"44","/home/rinku/codes/unsocial/client/src/utilities/overflowToggler.js":"45","/home/rinku/codes/unsocial/client/src/utilities/clearNotification.js":"46","/home/rinku/codes/unsocial/client/src/utilities/formValidator.ts":"47","/home/rinku/codes/unsocial/client/src/components/Navbar/index.ts":"48","/home/rinku/codes/unsocial/client/src/components/Loader/index.ts":"49","/home/rinku/codes/unsocial/client/src/components/PostsGrid/index.ts":"50","/home/rinku/codes/unsocial/client/src/components/SearchUsers/index.ts":"51","/home/rinku/codes/unsocial/client/src/components/Feed/index.ts":"52","/home/rinku/codes/unsocial/client/src/components/ProfileSummary/index.ts":"53","/home/rinku/codes/unsocial/client/src/components/Backdrop/index.ts":"54","/home/rinku/codes/unsocial/client/src/components/UnfollowPrompt/index.ts":"55","/home/rinku/codes/unsocial/client/src/components/UserListView/index.ts":"56","/home/rinku/codes/unsocial/client/src/components/LoginPrompt/index.ts":"57","/home/rinku/codes/unsocial/client/src/components/PostUploadView/index.ts":"58","/home/rinku/codes/unsocial/client/src/components/CommentInput/index.ts":"59","/home/rinku/codes/unsocial/client/src/components/Post/index.ts":"60","/home/rinku/codes/unsocial/client/src/components/CommentsView/index.ts":"61","/home/rinku/codes/unsocial/client/src/components/Form/index.ts":"62","/home/rinku/codes/unsocial/client/src/components/Navbar/Navbar.tsx":"63","/home/rinku/codes/unsocial/client/src/components/Loader/Loader.tsx":"64","/home/rinku/codes/unsocial/client/src/components/PostsGrid/PostsGrid.tsx":"65","/home/rinku/codes/unsocial/client/src/components/Feed/Feed.tsx":"66","/home/rinku/codes/unsocial/client/src/components/ProfileSummary/ProfileSummary.tsx":"67","/home/rinku/codes/unsocial/client/src/components/SearchUsers/SearchUsers.tsx":"68","/home/rinku/codes/unsocial/client/src/components/Backdrop/Backdrop.tsx":"69","/home/rinku/codes/unsocial/client/src/components/UnfollowPrompt/UnfollowPrompt.tsx":"70","/home/rinku/codes/unsocial/client/src/components/UserListView/UserListView.tsx":"71","/home/rinku/codes/unsocial/client/src/components/LoginPrompt/LoginPrompt.tsx":"72","/home/rinku/codes/unsocial/client/src/components/PostUploadView/PostUploadView.tsx":"73","/home/rinku/codes/unsocial/client/src/components/CommentInput/CommentInput.tsx":"74","/home/rinku/codes/unsocial/client/src/components/Post/Post.tsx":"75","/home/rinku/codes/unsocial/client/src/components/CommentsView/CommentsView.tsx":"76","/home/rinku/codes/unsocial/client/src/components/Form/Form.tsx":"77","/home/rinku/codes/unsocial/client/src/components/Modal/index.ts":"78","/home/rinku/codes/unsocial/client/src/components/Comment/index.ts":"79","/home/rinku/codes/unsocial/client/src/components/Modal/Modal.tsx":"80","/home/rinku/codes/unsocial/client/src/components/Comment/Comment.tsx":"81","/home/rinku/codes/unsocial/client/src/components/ProfileOptionsModal/index.ts":"82","/home/rinku/codes/unsocial/client/src/components/ProfileOptionsModal/ProfileOptionsModal.tsx":"83","/home/rinku/codes/unsocial/client/src/components/PostOptionsModal/index.ts":"84","/home/rinku/codes/unsocial/client/src/components/PostOptionsModal/PostOptionsModal.tsx":"85","/home/rinku/codes/unsocial/client/src/pages/SettingsPage/index.ts":"86","/home/rinku/codes/unsocial/client/src/pages/SettingsPage/SettingsPage.tsx":"87","/home/rinku/codes/unsocial/client/src/pages/ExplorePage/index.tsx":"88","/home/rinku/codes/unsocial/client/src/pages/ExplorePage/ExplorePage.tsx":"89"},{"size":353,"mtime":1659095848139,"results":"90","hashOfConfig":"91"},{"size":407,"mtime":1659095848139,"results":"92","hashOfConfig":"91"},{"size":3464,"mtime":1659176884539,"results":"93","hashOfConfig":"91"},{"size":333,"mtime":1659095848139,"results":"94","hashOfConfig":"91"},{"size":2885,"mtime":1659095848139,"results":"95","hashOfConfig":"91"},{"size":9604,"mtime":1659095848139,"results":"96","hashOfConfig":"91"},{"size":9404,"mtime":1659095848139,"results":"97","hashOfConfig":"91"},{"size":2142,"mtime":1659095848139,"results":"98","hashOfConfig":"91"},{"size":2906,"mtime":1659095848139,"results":"99","hashOfConfig":"91"},{"size":418,"mtime":1659095848139,"results":"100","hashOfConfig":"91"},{"size":1062,"mtime":1659095848139,"results":"101","hashOfConfig":"91"},{"size":472,"mtime":1659095848139,"results":"102","hashOfConfig":"91"},{"size":1847,"mtime":1659181736047,"results":"103","hashOfConfig":"91"},{"size":943,"mtime":1659095848139,"results":"104","hashOfConfig":"91"},{"size":2327,"mtime":1659095848143,"results":"105","hashOfConfig":"91"},{"size":1702,"mtime":1659095848143,"results":"106","hashOfConfig":"91"},{"size":307,"mtime":1659095848143,"results":"107","hashOfConfig":"91"},{"size":4198,"mtime":1659095848143,"results":"108","hashOfConfig":"91"},{"size":34,"mtime":1659095848139,"results":"109","hashOfConfig":"91"},{"size":36,"mtime":1659095848139,"results":"110","hashOfConfig":"91"},{"size":41,"mtime":1659095848139,"results":"111","hashOfConfig":"91"},{"size":38,"mtime":1659095848139,"results":"112","hashOfConfig":"91"},{"size":38,"mtime":1659095848139,"results":"113","hashOfConfig":"91"},{"size":42,"mtime":1659095848139,"results":"114","hashOfConfig":"91"},{"size":39,"mtime":1659095848139,"results":"115","hashOfConfig":"91"},{"size":42,"mtime":1659095848139,"results":"116","hashOfConfig":"91"},{"size":39,"mtime":1659095848139,"results":"117","hashOfConfig":"91"},{"size":47,"mtime":1659095848139,"results":"118","hashOfConfig":"91"},{"size":362,"mtime":1659095848139,"results":"119","hashOfConfig":"91"},{"size":124,"mtime":1659095848139,"results":"120","hashOfConfig":"91"},{"size":81,"mtime":1659183201546,"results":"121","hashOfConfig":"91"},{"size":183,"mtime":1659095848139,"results":"122","hashOfConfig":"91"},{"size":245,"mtime":1659095848139,"results":"123","hashOfConfig":"91"},{"size":275,"mtime":1659095848139,"results":"124","hashOfConfig":"91"},{"size":2038,"mtime":1659176914995,"results":"125","hashOfConfig":"91"},{"size":7441,"mtime":1659183180081,"results":"126","hashOfConfig":"91"},{"size":6788,"mtime":1659095848139,"results":"127","hashOfConfig":"91"},{"size":1322,"mtime":1659095848139,"results":"128","hashOfConfig":"91"},{"size":1793,"mtime":1659095848139,"results":"129","hashOfConfig":"91"},{"size":1523,"mtime":1659095848139,"results":"130","hashOfConfig":"91"},{"size":4051,"mtime":1659095848139,"results":"131","hashOfConfig":"91"},{"size":438,"mtime":1659095848139,"results":"132","hashOfConfig":"91"},{"size":461,"mtime":1659095848143,"results":"133","hashOfConfig":"91"},{"size":2909,"mtime":1659095848139,"results":"134","hashOfConfig":"91"},{"size":222,"mtime":1659095848143,"results":"135","hashOfConfig":"91"},{"size":194,"mtime":1659095848143,"results":"136","hashOfConfig":"91"},{"size":1264,"mtime":1659095848143,"results":"137","hashOfConfig":"91"},{"size":36,"mtime":1659095848139,"results":"138","hashOfConfig":"91"},{"size":36,"mtime":1659095848139,"results":"139","hashOfConfig":"91"},{"size":39,"mtime":1659095848139,"results":"140","hashOfConfig":"91"},{"size":41,"mtime":1659095848139,"results":"141","hashOfConfig":"91"},{"size":34,"mtime":1659095848135,"results":"142","hashOfConfig":"91"},{"size":44,"mtime":1659095848139,"results":"143","hashOfConfig":"91"},{"size":38,"mtime":1659095848135,"results":"144","hashOfConfig":"91"},{"size":44,"mtime":1659095848139,"results":"145","hashOfConfig":"91"},{"size":42,"mtime":1659095848139,"results":"146","hashOfConfig":"91"},{"size":41,"mtime":1659095848139,"results":"147","hashOfConfig":"91"},{"size":44,"mtime":1659095848139,"results":"148","hashOfConfig":"91"},{"size":42,"mtime":1659095848135,"results":"149","hashOfConfig":"91"},{"size":34,"mtime":1659095848139,"results":"150","hashOfConfig":"91"},{"size":42,"mtime":1659095848135,"results":"151","hashOfConfig":"91"},{"size":34,"mtime":1659095848139,"results":"152","hashOfConfig":"91"},{"size":5090,"mtime":1659179069332,"results":"153","hashOfConfig":"91"},{"size":628,"mtime":1659095848139,"results":"154","hashOfConfig":"91"},{"size":1095,"mtime":1659095848139,"results":"155","hashOfConfig":"91"},{"size":1263,"mtime":1659095848135,"results":"156","hashOfConfig":"91"},{"size":2944,"mtime":1659095848139,"results":"157","hashOfConfig":"91"},{"size":2070,"mtime":1659095848139,"results":"158","hashOfConfig":"91"},{"size":389,"mtime":1659095848135,"results":"159","hashOfConfig":"91"},{"size":904,"mtime":1659095848139,"results":"160","hashOfConfig":"91"},{"size":1516,"mtime":1659095848139,"results":"161","hashOfConfig":"91"},{"size":808,"mtime":1659095848139,"results":"162","hashOfConfig":"91"},{"size":3502,"mtime":1659095848139,"results":"163","hashOfConfig":"91"},{"size":2433,"mtime":1659095848135,"results":"164","hashOfConfig":"91"},{"size":9557,"mtime":1659095848139,"results":"165","hashOfConfig":"91"},{"size":1194,"mtime":1659095848135,"results":"166","hashOfConfig":"91"},{"size":2734,"mtime":1659095848135,"results":"167","hashOfConfig":"91"},{"size":35,"mtime":1659095848139,"results":"168","hashOfConfig":"91"},{"size":37,"mtime":1659095848135,"results":"169","hashOfConfig":"91"},{"size":510,"mtime":1659095848139,"results":"170","hashOfConfig":"91"},{"size":3875,"mtime":1659095848135,"results":"171","hashOfConfig":"91"},{"size":49,"mtime":1659095848139,"results":"172","hashOfConfig":"91"},{"size":1048,"mtime":1659095848139,"results":"173","hashOfConfig":"91"},{"size":46,"mtime":1659095848139,"results":"174","hashOfConfig":"91"},{"size":2154,"mtime":1659095848139,"results":"175","hashOfConfig":"91"},{"size":42,"mtime":1659095848139,"results":"176","hashOfConfig":"91"},{"size":9515,"mtime":1659095848139,"results":"177","hashOfConfig":"91"},{"size":41,"mtime":1659176520230,"results":"178","hashOfConfig":"91"},{"size":2422,"mtime":1659181710155,"results":"179","hashOfConfig":"91"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},"1jg9zih",{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"182"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"182"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"182"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"182"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"182"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"182"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"182"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"182"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"182"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"182"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"182"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"182"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"182"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rinku/codes/unsocial/client/src/index.tsx",[],["373","374"],"/home/rinku/codes/unsocial/client/src/redux/store.js",[],["375","376"],"/home/rinku/codes/unsocial/client/src/components/App.tsx",["377","378"],"/home/rinku/codes/unsocial/client/src/redux/rootReducer.js",[],"/home/rinku/codes/unsocial/client/src/redux/user/userActions.js",[],"/home/rinku/codes/unsocial/client/src/redux/post/postsActions.js",[],"/home/rinku/codes/unsocial/client/src/redux/post/postsReducer.js",[],"/home/rinku/codes/unsocial/client/src/redux/user/userReducer.js",[],"/home/rinku/codes/unsocial/client/src/redux/profile/profileReducer.js",[],"/home/rinku/codes/unsocial/client/src/redux/user/userActionTypes.js",[],"/home/rinku/codes/unsocial/client/src/redux/post/postsActionTypes.js",[],"/home/rinku/codes/unsocial/client/src/redux/profile/profileActionTypes.js",[],"/home/rinku/codes/unsocial/client/src/services/userServices.js",[],"/home/rinku/codes/unsocial/client/src/services/authServices.js",[],"/home/rinku/codes/unsocial/client/src/services/profileServices.js",[],"/home/rinku/codes/unsocial/client/src/services/commentServices.js",[],"/home/rinku/codes/unsocial/client/src/utilities/notificationPusher.js",[],"/home/rinku/codes/unsocial/client/src/services/postsServices.js",[],"/home/rinku/codes/unsocial/client/src/components/Logo/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Layout/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/MessageView/index.ts",[],"/home/rinku/codes/unsocial/client/src/pages/HomePage/index.ts",[],"/home/rinku/codes/unsocial/client/src/pages/ProfilePage/index.ts",[],"/home/rinku/codes/unsocial/client/src/pages/PostViewPage/index.ts",[],"/home/rinku/codes/unsocial/client/src/pages/LandingPage/index.ts",[],"/home/rinku/codes/unsocial/client/src/pages/RegisterPage/index.ts",[],"/home/rinku/codes/unsocial/client/src/pages/LoginPage/index.ts",[],"/home/rinku/codes/unsocial/client/src/pages/NotificationsPage/index.ts",[],"/home/rinku/codes/unsocial/client/src/firebase/firestore.js",[],"/home/rinku/codes/unsocial/client/src/firebase/storage.js",[],"/home/rinku/codes/unsocial/client/src/server_url.tsx",[],"/home/rinku/codes/unsocial/client/src/components/Logo/Logo.tsx",[],"/home/rinku/codes/unsocial/client/src/components/Layout/Layout.tsx",[],"/home/rinku/codes/unsocial/client/src/components/MessageView/MessageView.tsx",[],"/home/rinku/codes/unsocial/client/src/pages/HomePage/HomePage.tsx",["379"],"/home/rinku/codes/unsocial/client/src/pages/ProfilePage/ProfilePage.tsx",["380"],"/home/rinku/codes/unsocial/client/src/pages/PostViewPage/PostViewPage.tsx",["381","382","383","384"],"import { Fragment, useEffect, useState } from \"react\";\nimport * as PostsActions from \"../../redux/post/postsActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../../components/Loader\";\nimport overflowToggler from \"../../utilities/overflowToggler\";\nimport Backdrop from \"../../components/Backdrop\";\nimport CommentInput from \"../../components/CommentInput\";\nimport CommentsView from \"../../components/CommentsView\";\nimport {\n  deleteComment,\n  getCommentLikers,\n} from \"../../services/commentServices\";\nimport LoginPrompt from \"../../components/LoginPrompt\";\nimport Post from \"../../components/Post\";\nimport styles from \"./PostViewPage.module.scss\";\n\ntype PostViewPageTypes = {\n  currentUsername: string;\n  currentUserUid: string;\n  posts: any;\n  match: any;\n  history: any;\n  LOAD_POST: any;\n  loading: boolean;\n  GET_COMMENTS: any;\n  LIKE_COMMENT: any;\n  UNLIKE_COMMENT: any;\n  DELETE_COMMENT: any;\n  GET_COMMENT_LIKERS: any;\n  gettingCommentLikers: any;\n  userDataLoaded: boolean;\n  ADD_MESSAGE: any;\n  token: string;\n};\n\nconst PostViewPage = ({\n  currentUsername,\n  currentUserUid,\n  posts,\n  match,\n  history,\n  LOAD_POST,\n  loading,\n  GET_COMMENTS,\n  LIKE_COMMENT,\n  UNLIKE_COMMENT,\n  DELETE_COMMENT,\n  GET_COMMENT_LIKERS,\n  gettingCommentLikers,\n  userDataLoaded,\n  ADD_MESSAGE,\n  token,\n}: PostViewPageTypes) => {\n  const [showLoginNeededPrompt, setShowLoginNeededPrompt] = useState(false);\n  const post_id = match.params.post_id;\n  const currentPost = posts.filter((post: any) => post.post_id === post_id);\n  const thisPostComments = currentPost[0]?.comments;\n  const post_uid = currentPost[0]?.post_uid;\n\n  const [postLoading, setPostLoading] = useState(true);\n\n  useEffect(() => {\n    if (!loading) setPostLoading(false);\n  }, [loading]);\n\n  const toggleModal = (setModal: any) => {\n    setModal((prev: any) => !prev);\n    overflowToggler();\n  };\n\n  const getComments = () => {\n    if (!thisPostComments) {\n      GET_COMMENTS(post_uid, currentUserUid);\n    }\n  };\n\n  const likeUnlikeComment = (likeOrUnlike: any, comment_uid: any) => {\n    if (currentUserUid) {\n      if (likeOrUnlike === \"like\") {\n        LIKE_COMMENT(comment_uid, currentUserUid, post_uid);\n      } else {\n        UNLIKE_COMMENT(comment_uid, currentUserUid, post_uid);\n      }\n    } else {\n      toggleModal(setShowLoginNeededPrompt);\n    }\n  };\n\n  const deleteComment = (comment_uid: any) => {\n    DELETE_COMMENT(comment_uid, post_uid);\n  };\n\n  const getCommentLikers = (comment_uid: any) => {\n    GET_COMMENT_LIKERS(comment_uid, post_uid);\n  };\n\n  useEffect(() => {\n    if (post_uid) {\n      getComments();\n    }\n  }, [post_uid]);\n\n  useEffect(() => {\n    document.body.style.overflow = \"auto\";\n    if (token) {\n      if (currentUserUid && currentPost.length < 1) {\n        LOAD_POST(post_id, currentUserUid);\n      }\n    } else {\n      LOAD_POST(post_id, currentUserUid);\n    }\n  }, [token, currentUserUid, post_id]);\n\n  return (\n    <Fragment>\n      {loading || postLoading ? (\n        <Loader />\n      ) : //checking if post exiists\n      !loading && !currentPost[0]?.post_image ? (\n        <p\n          style={{ marginTop: \"100px\", textAlign: \"center\", fontSize: \"15px\" }}\n        >\n          Post deleted or something went wrong!\n        </p>\n      ) : (\n        <div className={styles.PostViewPage}>\n          <Post\n            key={currentPost[0].post_uid}\n            post_id={currentPost[0].post_id}\n            haveILiked={currentPost[0].liked_by_me}\n            haveIDisliked={currentPost[0].disliked_by_me}\n            post_uid={currentPost[0].post_uid}\n            poster_username={currentPost[0].poster_username}\n            poster_profileImage={currentPost[0].poster_profileimage}\n            post_image={currentPost[0].post_image}\n            post_postedDate={currentPost[0].post_posted_date}\n            post_likesCount={currentPost[0].post_likes_count}\n            post_dislikesCount={currentPost[0].post_dislikes_count}\n            post_status={currentPost[0].post_status}\n            post_owner_uid={currentPost[0].poster_uid}\n            post_commentsCount={currentPost[0].post_comments_count}\n            haveISaved={currentPost[0].i_have_saved}\n            toggleLoginPrompt={() => toggleModal(setShowLoginNeededPrompt)}\n            fullHeightPostImage\n          />\n\n          <CommentInput\n            post_uid={post_uid}\n            post_owner_uid={currentPost[0]?.poster_uid}\n            toggleLoginNeededPrompt={() =>\n              toggleModal(setShowLoginNeededPrompt)\n            }\n          />\n\n          {thisPostComments !== undefined && (\n            <CommentsView\n              comments={thisPostComments || []}\n              likeUnlikeComment={likeUnlikeComment}\n              currentUserUid={currentUserUid}\n              deleteComment={deleteComment}\n              currentUsername={currentUsername}\n              getCommentLikers={getCommentLikers}\n              gettingCommentLikers={gettingCommentLikers}\n            />\n          )}\n        </div>\n      )}\n\n      {showLoginNeededPrompt ? (\n        <Fragment>\n          <LoginPrompt toggle={() => toggleModal(setShowLoginNeededPrompt)} />\n          <Backdrop\n            show={showLoginNeededPrompt}\n            toggle={() => toggleModal(setShowLoginNeededPrompt)}\n          />\n        </Fragment>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    token: state.user.token,\n    userDataLoaded: state.user.user_data_loaded,\n    gettingCommentLikers: state.posts.getting_comment_likers,\n    loadingLikers: state.posts.loading_likers,\n    currentUsername: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n    posts: state.posts.posts,\n    loading: state.posts.loading_post,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    ADD_MESSAGE: (message: any) => dispatch(PostsActions.ADD_MESSAGE(message)),\n    GET_COMMENT_LIKERS: (comment_uid: any, post_uid: any) =>\n      dispatch(PostsActions.GET_COMMENT_LIKERS(comment_uid, post_uid)),\n    DELETE_COMMENT: (comment_uid: any, post_uid: any) =>\n      dispatch(PostsActions.DELETE_COMMENT(comment_uid, post_uid)),\n    LIKE_COMMENT: (comment_uid: any, liker_uid: any, post_uid: any) =>\n      dispatch(PostsActions.LIKE_COMMENT(comment_uid, liker_uid, post_uid)),\n    UNLIKE_COMMENT: (comment_uid: any, unliker_uid: any, post_uid: any) =>\n      dispatch(PostsActions.UNLIKE_COMMENT(comment_uid, unliker_uid, post_uid)),\n    GET_COMMENTS: (post_uid: any, currentUserUid: any) =>\n      dispatch(PostsActions.GET_COMMENTS(post_uid, currentUserUid)),\n    LOAD_POST: (post_id: any, current_user_uid: any) =>\n      dispatch(PostsActions.GET_POST(post_id, current_user_uid)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostViewPage);\n","/home/rinku/codes/unsocial/client/src/pages/LandingPage/LandingPage.tsx",["385"],"import Logo from \"../../components/Logo\";\nimport styles from \"./LandingPage.module.scss\";\nimport { GrConnect, GrShareOption, GrDocument,GrActions } from \"react-icons/gr\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Landingpage = () => {\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n\n  return (\n    <div className={styles.LandingPage}>\n      <section>\n        <Logo />\n        <div>\n          <span>\n            <GrConnect />\n            <p>Connect with your friends.</p>\n          </span>\n          <span>\n            <GrShareOption />\n            <p>Share your photos with your friends.</p>\n          </span>\n          <span>\n            <GrActions />\n            <p>And many more.</p>\n          </span>\n        </div>\n      </section>\n\n      <section>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Type your email here\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <button\n            onClick={() => history.push(`/register?email=${email.trim()}`)}\n          >\n            Join Now\n          </button>\n          <button onClick={() => history.push(\"/login\")}>Login</button>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Landingpage;\n","/home/rinku/codes/unsocial/client/src/pages/RegisterPage/RegisterPage.tsx",[],"/home/rinku/codes/unsocial/client/src/pages/LoginPage/LoginPage.tsx",["386"],"import { useState, useEffect } from \"react\";\nimport Form from \"../../components/Form\";\nimport * as userActions from \"../../redux/user/userActions\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\ntype LoginPageProps = {\n  error: string;\n  loading: boolean;\n  currentUsername: String;\n  LOGIN: Function;\n};\n\nconst Loginpage = ({\n  error,\n  loading,\n  currentUsername,\n  LOGIN,\n}: LoginPageProps) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const history = useHistory();\n\n  const login = (e: any) => {\n    e.preventDefault();\n    LOGIN(username, password);\n  };\n\n  useEffect(() => {\n    if (currentUsername) {\n      history.push(\"/\");\n    }\n  }, [currentUsername]);\n\n  return (\n    <Form\n      username={username}\n      onUsernameChange={setUsername}\n      password={password}\n      onPasswordChange={setPassword}\n      formType=\"Login\"\n      errorMessage={error}\n      onFormSubmit={login}\n      onEmailChange={() => {}}\n      onRepeatPasswordChange={() => {}}\n      loading={loading}\n    />\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    error: state.user.error,\n    loading: state.user.loading,\n    currentUsername: state.user.currentUserData.username,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    LOGIN: (username: string, password: string) =>\n      dispatch(userActions.LOGIN(username, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loginpage);\n","/home/rinku/codes/unsocial/client/src/pages/NotificationsPage/NotificationsPage.tsx",["387"],"import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport clearNotification from \"../../utilities/clearNotification\";\nimport styles from \"./NotificationsPage.module.scss\";\nimport server_url from \"../../server_url\";\nimport { connect } from \"react-redux\";\nimport placeholderImage from \"../../assets/placeholder.jpg\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage.js\";\nimport ProfilePicPlaceholder from \"../../assets/avatar.jpg\";\nimport Moment from \"react-moment\"\n\ntype NotificationsPageTypes = {\n  currentUserUid: string;\n};\n\nconst NotificationsPage = ({ currentUserUid }: NotificationsPageTypes) => {\n  const history = useHistory();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    clearNotification(currentUserUid);\n\n    axios\n      .get(`${server_url}/user/getNotifications/${currentUserUid}`)\n      .then((res) => {\n        setNotifications(res.data);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className={styles.NotificationsPage}>\n      <div className={styles.Notifications}>\n        {notifications.length > 0 ? (\n          notifications\n            .sort((a: any, b: any) => {\n              return new Date(b.date).valueOf() - new Date(a.date).valueOf();\n            })\n            .map((noti: any) => {\n              return (\n                <div\n                  className={styles.Notification}\n                  style={loading ? { display: \"none\" } : { width: \"100%\" }}\n                  key={noti.uid}\n                  onClick={() =>\n                    noti.post_id !== null\n                      ? history.push(`/p/${noti.post_id}`)\n                      : noti.notification === \"follow\"\n                      ? history.push(`/user/${noti.username}`)\n                      : \"\"\n                  }\n                >\n                    <img\n                    data-src={noti.profile_image_url}\n                    src={ProfilePicPlaceholder}\n                    className={`lazy-image ${styles.ProfilePic}`}\n                    onLoad={lazyLoadImage}\n                    alt=\"profile-pc\"\n                  />\n                  <p>\n                    {noti.username}{\" \"}\n                    {noti.notification === \"like post\"\n                      ? \" liked your post.\"\n                      : noti.notification === \"dislike post\"\n                      ? \" disliked your post.\"\n                      : noti.notification === \"like comment\"\n                      ? \" liked your comment.\"\n                      : noti.notification === \"comment added\"\n                      ? \" commented on your post.\"\n                      : noti.notification === \"follow\"\n                      ? \"started following you.\"\n                      : \"\"}\n                    <i>\n                      {\" \"}\n                      <Moment fromNow>{noti.date}</Moment>\n                    </i>\n                  </p>\n\n                  {noti.post_image && (\n                      <img\n                      data-src={noti.post_image}\n                      src={placeholderImage}\n                      className={`lazy-image ${styles.PostImage}`}\n                      onLoad={lazyLoadImage}\n                      alt=\"profile-pc\"\n                    />\n                  )}\n                </div>\n              );\n            })\n        ) : (\n          <p\n            style={\n              loading\n                ? { display: \"none\" }\n                : { textAlign: \"center\", fontSize: \"14px\" }\n            }\n          >\n            No notifications\n          </p>\n        )}\n      </div>\n      <div\n        style={\n          !loading\n            ? { display: \"none\" }\n            : { textAlign: \"center\", fontSize: \"14px\" }\n        }\n      >\n        <p>Loading...</p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    currentUserUid: state.user.currentUserData.uid,\n  };\n};\n\nexport default connect(mapStateToProps)(NotificationsPage);\n","/home/rinku/codes/unsocial/client/src/firebase/firebase.js",[],"/home/rinku/codes/unsocial/client/src/utilities/lazyLoadImage.js",[],"/home/rinku/codes/unsocial/client/src/redux/profile/ProfileActions.js",[],"/home/rinku/codes/unsocial/client/src/utilities/overflowToggler.js",[],"/home/rinku/codes/unsocial/client/src/utilities/clearNotification.js",[],"/home/rinku/codes/unsocial/client/src/utilities/formValidator.ts",[],"/home/rinku/codes/unsocial/client/src/components/Navbar/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Loader/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/PostsGrid/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/SearchUsers/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Feed/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/ProfileSummary/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Backdrop/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/UnfollowPrompt/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/UserListView/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/LoginPrompt/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/PostUploadView/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/CommentInput/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Post/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/CommentsView/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Form/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Navbar/Navbar.tsx",["388","389","390"],"/home/rinku/codes/unsocial/client/src/components/Loader/Loader.tsx",["391"],"import { useEffect, useState } from \"react\";\nimport styles from \"./Loader.module.scss\";\n\ntype LoaderTypes = {\n  fullPage?: boolean;\n};\n\nexport default function Loader({ fullPage }: LoaderTypes) {\n  const [loaderWidth,setLoaderWidth]=useState(0);\n\n  useEffect(()=>{\n    let width=loaderWidth;\n    const timer=setInterval(()=>{\n      width+=20;\n      setLoaderWidth(width)\n\n      if(width>=200) clearInterval(timer)\n    },500)\n  },[])\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.loader}>\n        <div className={styles.loaderBar} style={{width:loaderWidth}}></div>\n      </div>\n    </div>\n  );\n}\n","/home/rinku/codes/unsocial/client/src/components/PostsGrid/PostsGrid.tsx",["392"],"import { Link, useHistory } from \"react-router-dom\";\nimport placeholderImage from \"../../assets/placeholder.jpg\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage.js\";\nimport styles from \"./PostsGrid.module.scss\";\n\ntype PostsGridTypes = {\n  userPosts: any;\n};\n\nconst PostsGrid = ({ userPosts }: PostsGridTypes) => {\n  const history = useHistory();\n\n  return (\n    <div className={styles[\"Posts-Grid\"]}>\n      {userPosts\n        .sort((a: any, b: any) => {\n          return (\n            new Date(b.post_posted_date).valueOf() -\n            new Date(a.post_posted_date).valueOf()\n          );\n        })\n        .map((e: any) => {\n          return (\n            <div key={e.post_id}>\n              <Link to={`/p/${e.post_id}`}>\n                <img\n                  onLoad={lazyLoadImage}\n                  className=\"lazy-image\"\n                  src={placeholderImage}\n                  alt={e.status || \"post\"}\n                  data-src={e.post_image}\n                />\n              </Link>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default PostsGrid;\n","/home/rinku/codes/unsocial/client/src/components/Feed/Feed.tsx",[],"/home/rinku/codes/unsocial/client/src/components/ProfileSummary/ProfileSummary.tsx",["393"],"import { Fragment } from \"react\";\nimport { FiPlus, FiSettings } from \"react-icons/all\";\nimport { useHistory } from \"react-router-dom\";\nimport ProfilePicPlaceholder from \"../../assets/avatar.jpg\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage\";\nimport CoverImage from \"../../assets/coverImage.jpg\";\nimport styles from \"./ProfileSummary.module.scss\";\n\ntype ProfileSummaryTypes = {\n  profileData: any;\n  isMyProfile: boolean;\n  toggleUnfollowPrompt: any;\n  showPostUploadModal: any;\n  FOLLOW: any;\n  LOAD_FOLLOWERS: any;\n  LOAD_FOLLOWINGS: any;\n};\n\nconst ProfileSummary = ({\n  profileData,\n  isMyProfile,\n  toggleUnfollowPrompt,\n  showPostUploadModal,\n  FOLLOW,\n  LOAD_FOLLOWERS,\n  LOAD_FOLLOWINGS,\n}: ProfileSummaryTypes) => {\n  const history = useHistory();\n\n  return (\n    <Fragment>\n      <div className={styles.ProfileSummary}>\n        <img src={CoverImage} alt=\"cover-image\" className={styles.CoverImage} />\n\n        <section>\n          <img\n            src={ProfilePicPlaceholder}\n            data-src={profileData.profile_image_url}\n            alt=\"profile_image\"\n            onLoad={lazyLoadImage}\n            className=\"lazy-image\"\n          />\n\n          <p className={styles.username}>{profileData.username}</p>\n          <p style={{ fontSize: \"15px\" }}>{profileData.bio}</p>\n\n          <div className={styles.UserSummary}>\n            <button>{profileData.posts_count} posts</button>\n            &#183;\n            <button onClick={LOAD_FOLLOWERS}>\n              {profileData.followers_count || 0}{\" \"}\n              {profileData.followers_count === 1 ? \"follower\" : \"followers\"}\n            </button>\n            &#183;\n            <button onClick={LOAD_FOLLOWINGS}>\n              {profileData.following_count || 0} following\n            </button>\n          </div>\n\n          <br />\n\n          <div className={styles.ActionButtons}>\n            {isMyProfile && (\n              <button\n                onClick={() => history.push(\"/settings\")}\n                className={styles[\"Profile-Edit-Button\"]}\n                style={{ fontSize: \"18px\" }}\n              >\n                <FiSettings />\n              </button>\n            )}\n\n            {!isMyProfile && !profileData.followed_by_me && (\n              <button className={styles.FollowButton} onClick={FOLLOW}>\n                Follow\n              </button>\n            )}\n\n            {!isMyProfile && profileData.followed_by_me && (\n              <button\n                className={styles.UnfollowButton}\n                onClick={toggleUnfollowPrompt}\n              >\n                Unfollow\n              </button>\n            )}\n\n            {isMyProfile && (\n              <button\n                style={{ fontSize: \"20px\" }}\n                onClick={showPostUploadModal}\n              >\n                <FiPlus />\n              </button>\n            )}\n          </div>\n        </section>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ProfileSummary;\n","/home/rinku/codes/unsocial/client/src/components/SearchUsers/SearchUsers.tsx",[],"/home/rinku/codes/unsocial/client/src/components/Backdrop/Backdrop.tsx",[],"/home/rinku/codes/unsocial/client/src/components/UnfollowPrompt/UnfollowPrompt.tsx",[],"/home/rinku/codes/unsocial/client/src/components/UserListView/UserListView.tsx",[],"/home/rinku/codes/unsocial/client/src/components/LoginPrompt/LoginPrompt.tsx",[],"/home/rinku/codes/unsocial/client/src/components/PostUploadView/PostUploadView.tsx",["394"],"import styles from \"./PostUploadView.module.scss\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useCallback } from \"react\";\nimport { FiImage } from \"react-icons/fi\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as postsActions from \"../../redux/post/postsActions\";\nimport Modal from \"../Modal\";\n\ntype PostUploadModalTypes = {\n  UPLOAD_POST: any;\n  toggle: any;\n  currentUserUid: any;\n  currentUsername: any;\n  currentUserProfileImage: any;\n};\n\nconst PostUploadModal = ({\n  UPLOAD_POST,\n  toggle,\n  currentUserUid,\n  currentUsername,\n  currentUserProfileImage,\n}: PostUploadModalTypes) => {\n  const [files, setFiles] = useState<any[]>([]);\n  const [status, setStatus] = useState(\"\");\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setFiles(\n      acceptedFiles.map((file: any) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      )\n    );\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  const thumbs = files.map((file: any) => (\n    <div key={file.name}>\n      <div>\n        <img src={file.preview} className={styles[\"Post-Image\"]} />\n      </div>\n    </div>\n  ));\n\n  const uploadPost = () => {\n    if (files) {\n      if (\n        [\"jpg\", \"png\", \"jpeg\"].includes(\n          files[0].name.slice(files[0].name.lastIndexOf(\".\") + 1)\n        )\n      ) {\n        toggle();\n        UPLOAD_POST({\n          owner_uid: currentUserUid,\n          status: status,\n          currentUsername: currentUsername,\n          image: files[0],\n          posted_date: new Date(),\n          currentUserProfileImage: currentUserProfileImage,\n        });\n      } else {\n        alert(\"Image must be on jpg,png or jpeg format.\");\n      }\n    }\n  };\n\n  return (\n    <Modal title=\"Add Post\">\n      <div className={styles[\"Post-Upload-View\"]}>\n        {files.length < 1 && (\n          <section {...getRootProps()} className={styles.Dropzone}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n              <p>Drop the files here ...</p>\n            ) : (\n              <>\n                <span style={{ fontSize: \"50px\" }}>\n                  <FiImage />\n                </span>\n                <p>Drop your Image here</p>\n                <button>Select from device</button>\n              </>\n            )}\n          </section>\n        )}\n\n        {files.length > 0 && (\n          <section className={styles.FinalStep}>\n            <span>\n              <img\n                src={currentUserProfileImage}\n                alt=\"profile_image\"\n                className={styles.UserImage}\n              />\n              <input\n                type=\"text\"\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n                placeholder=\"Type your status here\"\n              />\n              <button onClick={uploadPost}>upload</button>\n            </span>\n\n            {thumbs}\n          </section>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    currentUsername: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n    currentUserProfileImage: state.user.currentUserData.profile_image_url,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    UPLOAD_POST: (post_data: any) =>\n      dispatch(postsActions.UPLOAD_POST(post_data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostUploadModal);\n","/home/rinku/codes/unsocial/client/src/components/CommentInput/CommentInput.tsx",[],"/home/rinku/codes/unsocial/client/src/components/Post/Post.tsx",["395"],"import { Fragment, useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as postsActions from \"../../redux/post/postsActions\";\nimport UserListView from \"../UserListView\";\nimport Moment from \"react-moment\";\nimport {\n  FiThumbsUp,\n  FiThumbsDown,\n  FiMessageSquare,\n  FiMoreHorizontal,\n} from \"react-icons/fi\";\nimport Backdrop from \"../Backdrop\";\nimport overflowToggler from \"../../utilities/overflowToggler\";\nimport PostOptionsModal from \"../PostOptionsModal\";\nimport placeholderImage from \"../../assets/placeholder.jpg\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage.js\";\nimport ProfilePicPlaceholder from \"../../assets/avatar.jpg\";\nimport styles from \"./Post.module.scss\";\n\ntype PostTypes = {\n  post_commentsCount: number;\n  post_image: string;\n  post_likesCount: number;\n  post_dislikesCount: number;\n  post_postedDate: string;\n  post_status: string;\n  post_id: string;\n  post_owner_uid: string;\n  post_uid: string;\n  poster_profileImage: string;\n  poster_username: string;\n  haveISaved: boolean;\n  haveILiked: boolean;\n  haveIDisliked: boolean;\n  currentUsername: string;\n  currentUserUid: string;\n  currentUserProfileimage: string;\n  LIKE_POST: any;\n  UNLIKE_POST: any;\n  DISLIKE_POST: any;\n  UNDISLIKE_POST: any;\n  UNSAVE_POST: any;\n  SAVE_POST: any;\n  GET_LIKERS: any;\n  feedPosts: any;\n  likersLoading: any;\n  DELETE_POST: any;\n  ADD_MESSAGE: any;\n  toggleLoginPrompt?: any;\n  fullHeightPostImage?: boolean;\n};\n\nfunction useOutsideAlerter(ref: any, toggle: any) {\n  useEffect(() => {\n    function handleClickOutside(event: any) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        toggle();\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nconst Post = ({\n  post_commentsCount,\n  post_image,\n  post_likesCount,\n  post_dislikesCount,\n  post_postedDate,\n  post_status,\n  post_id,\n  post_owner_uid,\n  post_uid,\n  poster_profileImage,\n  poster_username,\n  haveISaved,\n  haveILiked,\n  haveIDisliked,\n  currentUsername,\n  currentUserUid,\n  currentUserProfileimage,\n  LIKE_POST,\n  UNLIKE_POST,\n  DISLIKE_POST,\n  UNDISLIKE_POST,\n  UNSAVE_POST,\n  SAVE_POST,\n  GET_LIKERS,\n  feedPosts,\n  likersLoading,\n  DELETE_POST,\n  ADD_MESSAGE,\n  toggleLoginPrompt,\n  fullHeightPostImage,\n}: PostTypes) => {\n  const thisPostLikers = feedPosts.filter(\n    (post: any) => post.post_uid === post_uid\n  )[0]?.post_likers;\n  const [showLikers, setShowLikers] = useState(false);\n  const [showPostOptionsModal, setShowPostOptionsModal] = useState(false);\n\n  const history = useHistory();\n\n  const likeUnlikePost = () => {\n    if (currentUsername) {\n      if (haveILiked) {\n        UNLIKE_POST(post_uid, currentUserUid, post_owner_uid);\n      } else {\n        if (haveIDisliked) {\n          UNDISLIKE_POST(post_uid, currentUserUid, post_owner_uid);\n        }\n        LIKE_POST(post_uid, currentUserUid, post_owner_uid);\n      }\n    } else {\n      toggleLoginPrompt();\n    }\n  };\n\n  const dislikeUndislikePost = () => {\n    if (currentUsername) {\n      if (haveIDisliked) {\n        UNDISLIKE_POST(post_uid, currentUserUid, post_owner_uid);\n      } else {\n        if (haveILiked) {\n          UNLIKE_POST(post_uid, currentUserUid, post_owner_uid);\n        }\n        DISLIKE_POST(post_uid, currentUserUid, post_owner_uid);\n      }\n    } else {\n      toggleLoginPrompt();\n    }\n  };\n\n  /*const saveUnsavePost = () => {\n    if (haveISaved) {\n      UNSAVE_POST(post_uid, currentUsername);\n    } else {\n      SAVE_POST(post_uid, currentUsername);\n    }\n  };\n  \n  const getLikers = () => {\n    toggleModal(setShowLikers);\n    if (!thisPostLikers) {\n      GET_LIKERS(post_uid);\n    }\n  };*/\n\n  const toggleModal = (setShowModal: any) => {\n    overflowToggler();\n    setShowModal((prev: any) => !prev);\n  };\n\n  const deletePost = () => {\n    DELETE_POST(post_uid);\n  };\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, () => setShowPostOptionsModal(false));\n\n  return (\n    <Fragment>\n      <div className={styles.Post}>\n        <section className={styles.TopSection}>\n          <span>\n            <img\n              data-src={poster_profileImage}\n              src={ProfilePicPlaceholder}\n              className=\"lazy-image\"\n              onLoad={lazyLoadImage}\n              alt=\"post_user_image\"\n            />\n            <Link to={`/user/${poster_username}`}>{poster_username}</Link>\n            &#183;\n            <p>\n              <Moment fromNow>{post_postedDate}</Moment>\n            </p>\n          </span>\n\n          <div style={{ position: \"relative\" }} ref={wrapperRef}>\n            <button\n              onClick={() => setShowPostOptionsModal((prev) => !prev)}\n              className={styles.OptionsButton}\n            >\n              <FiMoreHorizontal />\n            </button>\n\n            {showPostOptionsModal && (\n              <Fragment>\n                <PostOptionsModal\n                  hideGoToPost={fullHeightPostImage}\n                  toggle={() => setShowPostOptionsModal((prev) => !prev)}\n                  isMyPost={poster_username === currentUsername}\n                  deletePost={deletePost}\n                  post_id={post_id}\n                  AddMessage={ADD_MESSAGE}\n                />\n              </Fragment>\n            )}\n          </div>\n        </section>\n\n        <p className={styles.Status}>{post_status}</p>\n\n        <section className={styles.ImageSection}>\n          <Link to={`/p/${post_id}`}>\n            <img\n              className=\"lazy-image\"\n              src={placeholderImage}\n              alt=\"post_main_img\"\n              data-src={post_image}\n              onLoad={lazyLoadImage}\n              style={fullHeightPostImage ? { height: \"auto\" } : undefined}\n            />\n          </Link>\n        </section>\n\n        <section className={styles.ActionButtons}>\n          <button\n            onClick={likeUnlikePost}\n            style={haveILiked ? { color: \"tomato\" } : undefined}\n          >\n            <FiThumbsUp />\n            <p>\n              {typeof post_likesCount === \"object\" || post_likesCount === 0\n                ? \"\"\n                : post_likesCount}\n            </p>\n          </button>\n\n          <button\n            onClick={dislikeUndislikePost}\n            style={haveIDisliked ? { color: \"tomato\" } : undefined}\n          >\n            <FiThumbsDown />\n            <p>\n              {\" \"}\n              {typeof post_dislikesCount === \"object\" ||\n              post_dislikesCount === 0\n                ? \"\"\n                : post_dislikesCount}\n            </p>\n          </button>\n\n          <button onClick={() => history.push(`/p/${post_id}`)}>\n            <FiMessageSquare />\n            <p>\n              {\" \"}\n              {typeof post_commentsCount === \"object\" ||\n              post_commentsCount === 0\n                ? \"\"\n                : post_commentsCount}\n            </p>\n          </button>\n        </section>\n\n        {/*<p>{post_status}</p>\n      \n\n      <div>\n        <button onClick={getLikers}>\n          {post_likesCount || \"No\"} {post_likesCount === 1 ? \"like\" : \"likes\"}\n        </button>\n        <button onClick={() => history.push(`/p/${post_id}`)}>\n          {post_commentsCount}{\" \"}\n          {post_commentsCount === 1 ? \"comment\" : \"comments\"}\n        </button>\n      </div>\n\n      <div>\n       \n      </div>\n  */}\n      </div>\n\n      {showLikers && (\n        <Fragment>\n          <UserListView\n            title=\"Likes\"\n            loading={likersLoading}\n            users={thisPostLikers || []}\n            toggle={() => toggleModal(setShowLikers)}\n          />\n          <Backdrop\n            show={showLikers}\n            toggle={() => toggleModal(setShowLikers)}\n          />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    likersLoading: state.posts.loading_likers,\n    feedPosts: state.posts.posts.filter((post: any) => post.infeed === true),\n    currentUsername: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n    currentUserProfileimage: state.user.currentUserData.profile_image_url,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    ADD_MESSAGE: (message: any) => dispatch(postsActions.ADD_MESSAGE(message)),\n    DELETE_POST: (post_uid: any) =>\n      dispatch(postsActions.DELETE_POST(post_uid)),\n    GET_LIKERS: (post_uid: any) => dispatch(postsActions.GET_LIKERS(post_uid)),\n    SAVE_POST: (post_uid: any, saver_username: any) =>\n      dispatch(postsActions.SAVE_POST(post_uid, saver_username)),\n    UNSAVE_POST: (post_uid: any, unsaver_username: any) =>\n      dispatch(postsActions.UNSAVE_POST(post_uid, unsaver_username)),\n    LIKE_POST: (post_uid: any, liker_uid: any, post_owner_uid: any) =>\n      dispatch(postsActions.LIKE_POST(post_uid, liker_uid, post_owner_uid)),\n    UNLIKE_POST: (post_uid: any, unliker_uid: any) =>\n      dispatch(postsActions.UNLIKE_POST(post_uid, unliker_uid)),\n    DISLIKE_POST: (post_uid: any, disliker_uid: any, post_owner_uid: any) =>\n      dispatch(\n        postsActions.DISLIKE_POST(post_uid, disliker_uid, post_owner_uid)\n      ),\n    UNDISLIKE_POST: (post_uid: any, undisliker_uid: any) =>\n      dispatch(postsActions.UNDISLIKE_POST(post_uid, undisliker_uid)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\n","/home/rinku/codes/unsocial/client/src/components/CommentsView/CommentsView.tsx",[],"/home/rinku/codes/unsocial/client/src/components/Form/Form.tsx",["396"],"import { ReactEventHandler } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../Logo\";\nimport styles from \"./Form.module.scss\";\n\ntype Form = {\n  username: string;\n  onUsernameChange: Function;\n  email?: string;\n  onEmailChange: Function;\n  password: string;\n  onPasswordChange: Function;\n  repeatPassword?: string;\n  onRepeatPasswordChange: Function;\n  formType: \"Login\" | \"Register\";\n  errorMessage: String;\n  onFormSubmit: ReactEventHandler;\n  loading: boolean;\n};\n\nexport default function Form({\n  username,\n  onUsernameChange,\n  email,\n  onEmailChange,\n  password,\n  onPasswordChange,\n  repeatPassword,\n  onRepeatPasswordChange,\n  formType,\n  errorMessage,\n  onFormSubmit,\n  loading,\n}: Form) {\n  return (\n    <div className={styles.formWrapper}>\n      <Logo />\n\n      <form className={styles.form} onSubmit={onFormSubmit}>\n        {formType === \"Register\" && (\n          <>\n            <label>Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => onEmailChange(e.target.value)}\n            />\n          </>\n        )}\n        <label>Username</label>\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => onUsernameChange(e.target.value)}\n        />\n        <label>Password</label>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => onPasswordChange(e.target.value)}\n        />\n        {formType === \"Register\" && (\n          <>\n            <label>Repeat Password</label>\n            <input\n              type=\"password\"\n              value={repeatPassword}\n              onChange={(e) => onRepeatPasswordChange(e.target.value)}\n            />\n          </>\n        )}\n        <button type=\"submit\" disabled={loading}>\n          {!loading ? (\n            <>{formType === \"Login\" ? \"Login\" : \"Register\"}</>\n          ) : (\n            <span\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              ...\n            </span>\n          )}\n        </button>\n        {formType === \"Register\" && (\n          <p style={{ fontSize: \"13px\", color: \"gray\" }}>\n            By signing up, you agree to our terms and policies.\n          </p>\n        )}\n        <p style={{ color: \"red\", fontSize: \"13px\" }}>{errorMessage}</p>\n        <div>\n          <p>\n            {formType === \"Register\"\n              ? \"Already have an account?\"\n              : \"Don't have an account?\"}\n          </p>\n          <Link to={formType === \"Register\" ? \"/login\" : \"/register\"}>\n            {formType === \"Register\" ? \"Login\" : \"Register\"}\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/rinku/codes/unsocial/client/src/components/Modal/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Comment/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/Modal/Modal.tsx",[],"/home/rinku/codes/unsocial/client/src/components/Comment/Comment.tsx",["397"],"import { Fragment, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport overflowToggler from \"../../utilities/overflowToggler\";\nimport Backdrop from \"./../Backdrop\";\nimport UserListView from \"./../UserListView\";\nimport lazyLoadImage from \"../../utilities/lazyLoadImage.js\";\nimport ProfilePicPlaceholder from \"../../assets/avatar.jpg\";\nimport Moment from \"react-moment\";\nimport styles from \"./Comment.module.scss\";\n\ntype CommentTypes = {\n  comments: any;\n  comment: any;\n  likeUnlikeComment: any;\n  currentUserUid: string;\n  currentUsername: string;\n  deleteComment: any;\n  getCommentLikers: any;\n  gettingCommentLikers: boolean;\n};\n\nconst Comment = ({\n  comments,\n  comment,\n  likeUnlikeComment,\n  currentUserUid,\n  currentUsername,\n  deleteComment,\n  getCommentLikers,\n  gettingCommentLikers,\n}: CommentTypes) => {\n  const [showCommentLikers, setShowCommentLikers] = useState(false);\n  const commentLikers = comments.filter(\n    (cmt: any) => cmt.comment_uid === comment.comment_uid\n  )[0]?.likers;\n\n  const toggleModal = (setModal: any) => {\n    setModal((prev: any) => !prev);\n    overflowToggler();\n  };\n\n  const loadCommentLikers = () => {\n    toggleModal(setShowCommentLikers);\n    if (!commentLikers) {\n      getCommentLikers(comment.comment_uid);\n    }\n  };\n\n  console.log(currentUserUid, comment.post_owner_uid);\n\n  return (\n    <Fragment>\n      <div className={styles.Comment}>\n        <img\n          data-src={comment.poster_profile_image}\n          src={ProfilePicPlaceholder}\n          className=\"lazy-image\"\n          onLoad={lazyLoadImage}\n          alt=\"profile-image\"\n        />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <div style={{ display: \"flex\", alignItems: \"flex-start\" }}>\n            <p style={{ fontWeight: \"bold\" }}>\n              <NavLink to={`/user/${comment.poster_username}`}>\n                {comment.poster_username}\n              </NavLink>\n            </p>\n            <p style={{ wordBreak: \"break-all\", marginLeft: \"5px\" }}>\n              {comment.comment}\n            </p>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginTop: \"-18px\",\n            }}\n          >\n            <p style={{ marginRight: \"5px\" }}>\n              <Moment fromNow>{comment.posted_date}</Moment>\n            </p>\n            <span>&#183;</span>\n            <button onClick={loadCommentLikers}>\n              {comment.comment_likes_count || 0}{\" \"}\n              {comment.comment_likes_count === 1 ? \"like\" : \"likes\"}\n            </button>\n            <span>&#183;</span>\n            <button\n              onClick={() =>\n                likeUnlikeComment(\n                  comment.liked_by_me ? \"unlike\" : \"like\",\n                  comment.comment_uid\n                )\n              }\n            >\n              {comment.liked_by_me ? \"unlike\" : \"like\"}\n            </button>\n\n            {(currentUserUid === comment.post_owner_uid ||\n              currentUsername === comment.poster_username) && (\n              <>\n                <span>&#183;</span>\n                <button\n                  style={{ color: \"red\" }}\n                  onClick={() => deleteComment(comment.comment_uid)}\n                >\n                  delete\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {showCommentLikers ? (\n        <Fragment>\n          <UserListView\n            title=\"Likes\"\n            loading={gettingCommentLikers}\n            toggle={() => toggleModal(setShowCommentLikers)}\n            users={commentLikers || []}\n          />\n          <Backdrop\n            show={showCommentLikers}\n            toggle={() => toggleModal(setShowCommentLikers)}\n          />\n        </Fragment>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default Comment;\n","/home/rinku/codes/unsocial/client/src/components/ProfileOptionsModal/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/ProfileOptionsModal/ProfileOptionsModal.tsx",["398"],"import { useHistory } from \"react-router-dom\";\nimport styles from \"./ProfileOptionsModal.module.scss\";\nimport {\n  FiSettings,\n  FiUser,\n  FiRotateCw,\n  FiArrowDownLeft,\n} from \"react-icons/fi\";\n\ntype ProfileOptionsViewTypes = {\n  toggle: any;\n  LOGOUT: any;\n  currentUsername: string;\n};\n\nconst ProfileOptionsModal = ({\n  toggle,\n  LOGOUT,\n  currentUsername,\n}: ProfileOptionsViewTypes) => {\n  const history = useHistory();\n\n  const goTo = (location: string) => {\n    toggle();\n    history.replace(location);\n  };\n\n  return (\n    <section className={styles.ProfileOptionsModal}>\n      <button onClick={() => goTo(`/user/${currentUsername}`)}>\n        <FiUser />\n        <p>My profile</p>\n      </button>\n      <button onClick={() => goTo(\"/settings\")}>\n        <FiSettings />\n        <p>Settings</p>\n      </button>\n      <button\n        onClick={LOGOUT}\n        style={{ color: \"tomato\", borderBottom: \"none\" }}\n      >\n        <FiArrowDownLeft />\n        <p>Log out</p>\n      </button>\n    </section>\n  );\n};\n\nexport default ProfileOptionsModal;\n","/home/rinku/codes/unsocial/client/src/components/PostOptionsModal/index.ts",[],"/home/rinku/codes/unsocial/client/src/components/PostOptionsModal/PostOptionsModal.tsx",[],"/home/rinku/codes/unsocial/client/src/pages/SettingsPage/index.ts",[],"/home/rinku/codes/unsocial/client/src/pages/SettingsPage/SettingsPage.tsx",["399","400"],"import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  updateUserData,\n  updateProfilePicture,\n  updatePassword,\n} from \"../../services/userServices\";\nimport storage from \"../../firebase/storage\";\nimport Compressor from \"compressorjs\";\nimport { Link } from \"react-router-dom\";\nimport * as postActions from \"../../redux/post/postsActions\";\nimport * as userActions from \"../../redux/user/userActions\";\nimport styles from \"./SettingsPage.module.scss\";\n\ntype SettingsPageTypes = {\n  currentUserProfileImage: string;\n  currentUserName: string;\n  currentUserUid: string;\n  currentUserBio: string;\n  currentUserEmail: string;\n  ADD_MESSAGE: any;\n  UPDATE_PROFILE_LOCALLY: any;\n};\n\nconst SettingsPage = ({\n  currentUserProfileImage,\n  currentUserName,\n  currentUserUid,\n  currentUserBio,\n  currentUserEmail,\n  ADD_MESSAGE,\n  UPDATE_PROFILE_LOCALLY,\n}: SettingsPageTypes) => {\n  const [mode, setMode] = useState(1);\n\n  const [username, setUsername] = useState(currentUserName);\n  const [email, setEmail] = useState(currentUserEmail);\n  const [bio, setBio] = useState(currentUserBio);\n  const [updating, setUpdating] = useState(false);\n  const [updatingProfilePicture, setUpdatingProfilePicture] = useState(false);\n\n  //image file\n  const [selectedImage, setSelectedImage] = useState(null);\n  const newImage = selectedImage ? URL.createObjectURL(selectedImage) : null;\n\n  const updateImage = (e: any) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (\n        file.name\n          .slice(file.name.slice(file.name.lastIndexOf(\".\")))\n          .includes(\"jpg\", \"png\", \"jpeg\")\n      ) {\n        setSelectedImage(e.target.files[0]);\n      } else {\n        ADD_MESSAGE(\"Image must be on jpg,png or jpeg format.\");\n      }\n    }\n\n    setTimeout(() => {\n      ADD_MESSAGE(null);\n    }, 3000);\n  };\n\n  const updateProfilePictureFinal = () => {\n    if (selectedImage && !updatingProfilePicture) {\n      setUpdatingProfilePicture(true);\n      new Compressor(selectedImage, {\n        quality: 0.6,\n        success(result: any) {\n          const uploadedImage = storage\n            .ref(`/profilePics/${currentUserUid}/${result.name}`)\n            .put(result);\n          uploadedImage.on(\n            \"state_changed\",\n            (snapshot) => {},\n            (err) => console.log(err),\n            () => {\n              storage\n                .ref(`/profilePics/${currentUserUid}`)\n                .child(result.name)\n                .getDownloadURL()\n                .then((url) => {\n                  updateProfilePicture(currentUserUid, url)\n                    .then((res) => {\n                      if (res === \"done\") {\n                        ADD_MESSAGE(\"Successfully updated the profile picture\");\n                      } else {\n                        ADD_MESSAGE(res);\n                      }\n                      setUpdating(false);\n                    })\n                    .catch((err) => ADD_MESSAGE(err.message));\n                });\n            }\n          );\n        },\n      });\n    }\n  };\n\n  const updateProfile = (e: any) => {\n    e.preventDefault();\n    setUpdating(true);\n\n    if (\n      username === currentUserName &&\n      email === currentUserEmail &&\n      bio === currentUserBio\n    ) {\n      ADD_MESSAGE(\"Nothing to Update.\");\n      setUpdating(false);\n    } else {\n      if (\n        !username.trim().includes(\" \") &&\n        username.trim().length >= 5 &&\n        username.trim().length <= 25\n      ) {\n        updateUserData(\n          username.trim().toLowerCase(),\n          email || \"\",\n          bio || \"\",\n          currentUserName\n        ).then((res) => {\n          if (res !== \"success\") {\n            ADD_MESSAGE(res);\n          } else {\n            ADD_MESSAGE(\"Successfully updated the profile.\");\n            UPDATE_PROFILE_LOCALLY({ bio, username, email });\n          }\n          setUpdating(false);\n        });\n      } else {\n        setUpdating(false);\n        ADD_MESSAGE(\"Username must be spaceless between 5 and 25 characters.\");\n      }\n    }\n\n    setTimeout(() => {\n      ADD_MESSAGE(null);\n    }, 3000);\n  };\n\n  //for password update\n  const [initialPassword, setInitialPassword] = useState(\"\");\n  const [newPassword1, setNewPassword1] = useState(\"\");\n  const [newPassword2, setNewPassword2] = useState(\"\");\n\n  const updatePasswordFinal = (e: any) => {\n    e.preventDefault();\n    setUpdating(true);\n    if (newPassword1 === newPassword2) {\n      if (newPassword1.trim().length >= 5 && newPassword1.trim().length <= 25) {\n        updatePassword(currentUserUid, initialPassword, newPassword1).then(\n          (res) => {\n            setUpdating(false);\n            if (res === \"success\") {\n              ADD_MESSAGE(\"Successfully changed password\");\n              setInitialPassword(\"\");\n              setNewPassword1(\"\");\n              setNewPassword2(\"\");\n            } else {\n              ADD_MESSAGE(res);\n            }\n          }\n        );\n      } else {\n        setUpdating(false);\n        ADD_MESSAGE(\"new passwords must be between 5 to 25 characters.\");\n      }\n    } else {\n      setUpdating(false);\n      ADD_MESSAGE(\"new passwords must match.\");\n    }\n\n    setTimeout(() => {\n      ADD_MESSAGE(null);\n    }, 3000);\n  };\n\n  return (\n    <div className={styles.SettingsPage}>\n      <div className={styles.Tabs}>\n        <button\n          onClick={() => setMode(1)}\n          className={mode === 1 ? styles.ActiveTabButton : \"\"}\n        >\n          Update Profile\n        </button>\n        <button\n          onClick={() => setMode(2)}\n          className={mode === 2 ? styles.ActiveTabButton : \"\"}\n        >\n          Change Password\n        </button>\n      </div>\n\n      {mode === 1 && (\n        <div>\n          <section className={styles.SectionOne}>\n            <img\n              src={newImage || currentUserProfileImage}\n              alt=\"profile-image\"\n            />\n\n            <div>\n              <p>{currentUserName}</p>\n              <label\n                htmlFor=\"image\"\n                style={newImage ? { display: \"none\" } : undefined}\n              >\n                Change Profile Photo\n              </label>\n              <label\n                htmlFor=\"u-btn\"\n                style={!newImage ? { display: \"none\" } : undefined}\n              >\n                {updatingProfilePicture\n                  ? \"Updating Profile Picture..\"\n                  : \"Confirm New Profile Photo\"}\n              </label>\n              <button\n                style={{ display: \"none\" }}\n                id=\"u-btn\"\n                onClick={updateProfilePictureFinal}\n              >\n                Update Profile Photo\n              </button>\n              <input\n                type=\"file\"\n                style={{ display: \"none\" }}\n                id=\"image\"\n                onChange={updateImage}\n                accept=\"image/*\"\n              />\n            </div>\n          </section>\n\n          <section>\n            <form onSubmit={updateProfile}>\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                value={username.toLowerCase()}\n                id=\"username\"\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"Bio\">Bio</label>\n              <textarea onChange={(e) => setBio(e.target.value)}>\n                {bio}\n              </textarea>\n\n              <button\n                disabled={updating}\n                className={styles.SubmitButton}\n                onClick={updateProfile}\n              >\n                Submit\n              </button>\n            </form>\n          </section>\n        </div>\n      )}\n\n      {mode === 2 && (\n        <div>\n          <form onSubmit={updatePasswordFinal}>\n            <label htmlFor=\"password1\">Current Password</label>\n            <input\n              type=\"password\"\n              value={initialPassword}\n              id=\"username\"\n              onChange={(e) => setInitialPassword(e.target.value)}\n            />\n            <label htmlFor=\"password2\">New Password</label>\n            <input\n              type=\"password\"\n              value={newPassword1}\n              onChange={(e) => setNewPassword1(e.target.value)}\n            />\n            <label htmlFor=\"password3\">Retype New Password</label>\n            <input\n              type=\"password\"\n              value={newPassword2}\n              onChange={(e) => setNewPassword2(e.target.value)}\n            />\n            <button disabled={updating} className={styles.SubmitButton}>\n              Submit\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    currentUserEmail: state.user.currentUserData.email,\n    currentUserBio: state.user.currentUserData.bio,\n    currentUserProfileImage: state.user.currentUserData.profile_image_url,\n    currentUserName: state.user.currentUserData.username,\n    currentUserUid: state.user.currentUserData.uid,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    UPDATE_PROFILE_LOCALLY: (data: any) =>\n      dispatch(userActions.UPDATE_PROFILE_LOCALLY(data)),\n    ADD_MESSAGE: (message: any) => dispatch(postActions.ADD_MESSAGE(message)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage);\n","/home/rinku/codes/unsocial/client/src/pages/ExplorePage/index.tsx",[],"/home/rinku/codes/unsocial/client/src/pages/ExplorePage/ExplorePage.tsx",["401","402"],{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","replacedBy":"406"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","severity":1,"message":"408","line":48,"column":6,"nodeType":"409","endLine":48,"endColumn":21,"suggestions":"410"},{"ruleId":"407","severity":1,"message":"411","line":54,"column":6,"nodeType":"409","endLine":54,"endColumn":13,"suggestions":"412"},{"ruleId":"407","severity":1,"message":"413","line":23,"column":6,"nodeType":"409","endLine":23,"endColumn":34,"suggestions":"414"},{"ruleId":"407","severity":1,"message":"415","line":108,"column":6,"nodeType":"409","endLine":108,"endColumn":39,"suggestions":"416"},{"ruleId":"417","severity":1,"message":"418","line":10,"column":3,"nodeType":"419","messageId":"420","endLine":10,"endColumn":16},{"ruleId":"417","severity":1,"message":"421","line":11,"column":3,"nodeType":"419","messageId":"420","endLine":11,"endColumn":19},{"ruleId":"407","severity":1,"message":"422","line":101,"column":6,"nodeType":"409","endLine":101,"endColumn":16,"suggestions":"423"},{"ruleId":"407","severity":1,"message":"424","line":112,"column":6,"nodeType":"409","endLine":112,"endColumn":38,"suggestions":"425"},{"ruleId":"417","severity":1,"message":"426","line":3,"column":36,"nodeType":"419","messageId":"420","endLine":3,"endColumn":46},{"ruleId":"407","severity":1,"message":"427","line":34,"column":6,"nodeType":"409","endLine":34,"endColumn":23,"suggestions":"428"},{"ruleId":"407","severity":1,"message":"429","line":31,"column":6,"nodeType":"409","endLine":31,"endColumn":8,"suggestions":"430"},{"ruleId":"407","severity":1,"message":"431","line":36,"column":6,"nodeType":"409","endLine":36,"endColumn":11,"suggestions":"432"},{"ruleId":"407","severity":1,"message":"429","line":60,"column":6,"nodeType":"409","endLine":60,"endColumn":8,"suggestions":"433"},{"ruleId":"434","severity":1,"message":"435","line":104,"column":23,"nodeType":"436","endLine":110,"endColumn":25},{"ruleId":"407","severity":1,"message":"437","line":19,"column":5,"nodeType":"409","endLine":19,"endColumn":7,"suggestions":"438"},{"ruleId":"417","severity":1,"message":"439","line":11,"column":9,"nodeType":"419","messageId":"420","endLine":11,"endColumn":16},{"ruleId":"434","severity":1,"message":"435","line":33,"column":9,"nodeType":"436","endLine":33,"endColumn":81},{"ruleId":"440","severity":1,"message":"441","line":43,"column":9,"nodeType":"436","endLine":43,"endColumn":68},{"ruleId":"407","severity":1,"message":"431","line":68,"column":6,"nodeType":"409","endLine":68,"endColumn":11,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":21,"column":25,"nodeType":"419","messageId":"445","endLine":21,"endColumn":29},{"ruleId":"434","severity":1,"message":"435","line":54,"column":9,"nodeType":"436","endLine":60,"endColumn":11},{"ruleId":"417","severity":1,"message":"446","line":6,"column":3,"nodeType":"419","messageId":"420","endLine":6,"endColumn":13},{"ruleId":"417","severity":1,"message":"447","line":10,"column":10,"nodeType":"419","messageId":"420","endLine":10,"endColumn":14},{"ruleId":"434","severity":1,"message":"435","line":201,"column":13,"nodeType":"436","endLine":204,"endColumn":15},{"ruleId":"407","severity":1,"message":"429","line":42,"column":6,"nodeType":"409","endLine":42,"endColumn":8,"suggestions":"448"},{"ruleId":"434","severity":1,"message":"435","line":46,"column":7,"nodeType":"436","endLine":46,"endColumn":79},"no-native-reassign",["449"],"no-negated-in-lhs",["450"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ADD_MESSAGE' and 'feedLoaded'. Either include them or remove the dependency array. If 'ADD_MESSAGE' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["451"],"React Hook useEffect has a missing dependency: 'LOGIN_WITH_UID'. Either include it or remove the dependency array. If 'LOGIN_WITH_UID' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["452"],"React Hook useEffect has a missing dependency: 'GET_FEED'. Either include it or remove the dependency array. If 'GET_FEED' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["453"],"React Hook useEffect has missing dependencies: 'GET_PROFILE_DATA' and 'profileData.length'. Either include them or remove the dependency array. If 'GET_PROFILE_DATA' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["454"],"@typescript-eslint/no-unused-vars","'deleteComment' is defined but never used.","Identifier","unusedVar","'getCommentLikers' is defined but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["455"],"React Hook useEffect has missing dependencies: 'LOAD_POST' and 'currentPost.length'. Either include them or remove the dependency array. If 'LOAD_POST' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["456"],"'GrDocument' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["457"],"React Hook useEffect has a missing dependency: 'currentUserUid'. Either include it or remove the dependency array.",["458"],"React Hook useEffect has a missing dependency: 'toggle'. Either include it or remove the dependency array. If 'toggle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["459"],["460"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loaderWidth'. Either include it or remove the dependency array.",["461"],"'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["462"],"@typescript-eslint/no-redeclare","'Form' is already defined.","redeclared","'FiRotateCw' is defined but never used.","'Link' is defined but never used.",["463"],"no-global-assign","no-unsafe-negation",{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"478","fix":"482"},{"desc":"483","fix":"484"},{"desc":"480","fix":"485"},{"desc":"478","fix":"486"},"Update the dependencies array to be: [ADD_MESSAGE, feedLoaded, uploadingPost]",{"range":"487","text":"488"},"Update the dependencies array to be: [LOGIN_WITH_UID, token]",{"range":"489","text":"490"},"Update the dependencies array to be: [GET_FEED, currentUserUid, feedLoaded]",{"range":"491","text":"492"},"Update the dependencies array to be: [profileUsername, currentUserUid, profileData.length, GET_PROFILE_DATA]",{"range":"493","text":"494"},"Update the dependencies array to be: [getComments, post_uid]",{"range":"495","text":"496"},"Update the dependencies array to be: [token, currentUserUid, post_id, currentPost.length, LOAD_POST]",{"range":"497","text":"498"},"Update the dependencies array to be: [currentUsername, history]",{"range":"499","text":"500"},"Update the dependencies array to be: [currentUserUid]",{"range":"501","text":"502"},"Update the dependencies array to be: [ref, toggle]",{"range":"503","text":"504"},{"range":"505","text":"502"},"Update the dependencies array to be: [loaderWidth]",{"range":"506","text":"507"},{"range":"508","text":"504"},{"range":"509","text":"502"},[1404,1419],"[ADD_MESSAGE, feedLoaded, uploadingPost]",[1500,1507],"[LOGIN_WITH_UID, token]",[686,714],"[GET_FEED, currentUserUid, feedLoaded]",[3117,3150],"[profileUsername, currentUserUid, profileData.length, GET_PROFILE_DATA]",[2616,2626],"[getComments, post_uid]",[2882,2914],"[token, currentUserUid, post_id, currentPost.length, LOAD_POST]",[739,756],"[currentUsername, history]",[1057,1059],"[currentUserUid]",[1271,1276],"[ref, toggle]",[1951,1953],[429,431],"[loaderWidth]",[1978,1983],[1246,1248]]