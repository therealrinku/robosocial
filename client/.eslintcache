[{"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\index.js":"1","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\store.js":"2","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\rootReducer.js":"3","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\App.js":"4","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Homepage.js":"5","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Feed.js":"6","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Post.js":"7","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\server_url.js":"8","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\Icons\\CustomIcons.js":"9","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userReducer.js":"10","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActionTypes.js":"11","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Navbar.js":"12","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Backdrop.js":"13","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\overflowToggler.js":"14","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostOptModal.js":"15","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostButton.js":"16","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\AddPostModal.js":"17","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\storage.js":"18","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\MobileNavbar.js":"19","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Profilepage.js":"20","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileSummary.js":"21","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileReducer.js":"22","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileActionTypes.js":"23","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\ProfileActions.js":"24","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\profileServices.js":"25","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileOptModal.js":"26","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UnfollowPrompt.js":"27","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileButtonLine.js":"28","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostsGrid.js":"29","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UserListModal.js":"30","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Loader.js":"31","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\PostView.js":"32","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\ExplorePage.js":"33","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\SearchView.js":"34","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\userServices.js":"35","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Loginpage.js":"36","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Signuppage.js":"37","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Landingpage.js":"38","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActions.js":"39","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\authServices.js":"40","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Recommended.js":"41","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsActions.js":"42","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsActionTypes.js":"43","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsReducer.js":"44","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\CommentBox.js":"45","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\postsServices.js":"46","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\commentServices.js":"47","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\CommentsView.js":"48","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Comment.js":"49","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\LoginNeededPrompt.js":"50","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\EditProfilePage.js":"51","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Activity.js":"52","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\firestore.js":"53","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\notificationPusher.js":"54","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\clearNotification.js":"55","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\firebase.js":"56","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\MessageViewer.js":"57","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\EditPasswordPage.js":"58","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\lazyLoadImage.js":"59"},{"size":358,"mtime":1609429642135,"results":"60","hashOfConfig":"61"},{"size":424,"mtime":1611824639461,"results":"62","hashOfConfig":"61"},{"size":345,"mtime":1610634271550,"results":"63","hashOfConfig":"61"},{"size":4251,"mtime":1615688202440,"results":"64","hashOfConfig":"61"},{"size":1879,"mtime":1614411683129,"results":"65","hashOfConfig":"61"},{"size":1014,"mtime":1610783847010,"results":"66","hashOfConfig":"61"},{"size":6461,"mtime":1615688151350,"results":"67","hashOfConfig":"61"},{"size":87,"mtime":1611809096690,"results":"68","hashOfConfig":"61"},{"size":10381,"mtime":1614396042950,"results":"69","hashOfConfig":"61"},{"size":2235,"mtime":1615692061612,"results":"70","hashOfConfig":"61"},{"size":432,"mtime":1615691577468,"results":"71","hashOfConfig":"61"},{"size":4429,"mtime":1615344955358,"results":"72","hashOfConfig":"61"},{"size":393,"mtime":1614408078855,"results":"73","hashOfConfig":"61"},{"size":231,"mtime":1609483675715,"results":"74","hashOfConfig":"61"},{"size":1854,"mtime":1615688113245,"results":"75","hashOfConfig":"61"},{"size":936,"mtime":1615251846595,"results":"76","hashOfConfig":"61"},{"size":1934,"mtime":1611368756847,"results":"77","hashOfConfig":"61"},{"size":130,"mtime":1611410230818,"results":"78","hashOfConfig":"61"},{"size":3911,"mtime":1615252618686,"results":"79","hashOfConfig":"61"},{"size":8582,"mtime":1615344691384,"results":"80","hashOfConfig":"61"},{"size":5152,"mtime":1615690945916,"results":"81","hashOfConfig":"61"},{"size":3011,"mtime":1610851785443,"results":"82","hashOfConfig":"61"},{"size":487,"mtime":1610851755587,"results":"83","hashOfConfig":"61"},{"size":3029,"mtime":1611417248474,"results":"84","hashOfConfig":"61"},{"size":2427,"mtime":1610848318069,"results":"85","hashOfConfig":"61"},{"size":1306,"mtime":1615254935944,"results":"86","hashOfConfig":"61"},{"size":555,"mtime":1609945241507,"results":"87","hashOfConfig":"61"},{"size":860,"mtime":1614429491882,"results":"88","hashOfConfig":"61"},{"size":909,"mtime":1615339105112,"results":"89","hashOfConfig":"61"},{"size":1068,"mtime":1609979156766,"results":"90","hashOfConfig":"61"},{"size":417,"mtime":1615338702088,"results":"91","hashOfConfig":"61"},{"size":14130,"mtime":1615688470197,"results":"92","hashOfConfig":"61"},{"size":1378,"mtime":1611542724399,"results":"93","hashOfConfig":"61"},{"size":1576,"mtime":1614395656903,"results":"94","hashOfConfig":"61"},{"size":1931,"mtime":1611803910644,"results":"95","hashOfConfig":"61"},{"size":2087,"mtime":1615343693686,"results":"96","hashOfConfig":"61"},{"size":2974,"mtime":1615343688884,"results":"97","hashOfConfig":"61"},{"size":160,"mtime":1610460695754,"results":"98","hashOfConfig":"61"},{"size":2982,"mtime":1615692065972,"results":"99","hashOfConfig":"61"},{"size":985,"mtime":1610595731576,"results":"100","hashOfConfig":"61"},{"size":1769,"mtime":1610612902993,"results":"101","hashOfConfig":"61"},{"size":8733,"mtime":1615688385210,"results":"102","hashOfConfig":"61"},{"size":1025,"mtime":1615688171539,"results":"103","hashOfConfig":"61"},{"size":8785,"mtime":1615688179204,"results":"104","hashOfConfig":"61"},{"size":2126,"mtime":1611501572469,"results":"105","hashOfConfig":"61"},{"size":3802,"mtime":1611373271443,"results":"106","hashOfConfig":"61"},{"size":1776,"mtime":1610794814366,"results":"107","hashOfConfig":"61"},{"size":908,"mtime":1610882241585,"results":"108","hashOfConfig":"61"},{"size":2978,"mtime":1610811680165,"results":"109","hashOfConfig":"61"},{"size":615,"mtime":1610850876324,"results":"110","hashOfConfig":"61"},{"size":6723,"mtime":1615691804705,"results":"111","hashOfConfig":"61"},{"size":3383,"mtime":1611824991556,"results":"112","hashOfConfig":"61"},{"size":381,"mtime":1614393821904,"results":"113","hashOfConfig":"61"},{"size":322,"mtime":1611417777877,"results":"114","hashOfConfig":"61"},{"size":201,"mtime":1611417615301,"results":"115","hashOfConfig":"61"},{"size":454,"mtime":1614395328359,"results":"116","hashOfConfig":"61"},{"size":172,"mtime":1614412416386,"results":"117","hashOfConfig":"61"},{"size":2947,"mtime":1615254632837,"results":"118","hashOfConfig":"61"},{"size":478,"mtime":1615339066730,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"6xydaq",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\index.js",[],["248","249"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\store.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\rootReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\App.js",["250","251"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Homepage.js",["252"],"import Feed from \"../components/Feed\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport Loader from \"../components/Loader\";\r\nimport * as postsActions from \"../redux/post/postsActions\";\r\nimport * as userActions from \"../redux/user/userActions\";\r\nimport Recommended from \"../components/Recommended\";\r\n\r\nconst Homepage = ({\r\n  currentUserUid,\r\n  feed,\r\n  GET_FEED,\r\n  loading,\r\n  recommendedUsers,\r\n  GET_RECOMMENDED_USERS,\r\n  feedLoaded,\r\n}) => {\r\n  useEffect(() => {\r\n    if (!feedLoaded) {\r\n      GET_FEED(currentUserUid);\r\n    }\r\n    if (feedLoaded && feed.length < 1) {\r\n      GET_RECOMMENDED_USERS(currentUserUid);\r\n    }\r\n  }, [currentUserUid, feedLoaded]);\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      {loading ? <Loader /> : null}\r\n      <Navbar />\r\n      {feed.length > 0 && !loading ? (\r\n        <Feed feed={feed} />\r\n      ) : !loading && feedLoaded ? (\r\n        <Recommended recommendedUsers={recommendedUsers} />\r\n      ) : null}\r\n      <MobileNavbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    feedLoaded: state.posts.feed_loaded,\r\n    recommendedUsers: state.user.recommendedUsers,\r\n    loading: state.posts.loading_feed,\r\n    feed: state.posts.posts.filter((post) => post.infeed === true),\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    currentUserProfileImage: state.user.currentUserData.profile_image_url,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    GET_RECOMMENDED_USERS: (uid) => dispatch(userActions.GET_RECOMMENDED(uid)),\r\n    GET_FEED: (user_uid) => dispatch(postsActions.GET_FEED(user_uid)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Feed.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Post.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\server_url.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\Icons\\CustomIcons.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Navbar.js",["253"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Icons from \"../Icons/CustomIcons\";\r\nimport SearchView from \"./SearchView\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Activity from \"./Activity\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport OverflowToggler from \"../utilities/overflowToggler\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport firestore from \"../firebase/firestore\";\r\nimport ProfilePicPlaceholder from \"../assets/avatar.jpg\";\r\nimport lazyLoadImage from \"../utilities/lazyLoadImage\";\r\n\r\nconst Navbar = ({\r\n  currentUsername,\r\n  currentUserProfileimage,\r\n  currentUserUid,\r\n  showSearchBarOnly,\r\n}) => {\r\n  const history = useHistory();\r\n  const pathname = history.location.pathname;\r\n  const [showActivity, setShowActivity] = useState(false);\r\n  const [notificationsCount, setNotificationsCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (currentUserUid) {\r\n      firestore\r\n        .collection(currentUserUid)\r\n        .doc(\"notifications\")\r\n        .onSnapshot((doc) => {\r\n          const data = [];\r\n          for (let e in doc.data()) {\r\n            data.push(e);\r\n          }\r\n          setNotificationsCount(data.length);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const toggleActivity = () => {\r\n    OverflowToggler();\r\n    setShowActivity((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"navbar\">\r\n        <ul style={showSearchBarOnly ? { display: \"none\" } : null}>\r\n          <Link to=\"/\">Instaclone</Link>\r\n        </ul>\r\n\r\n        <ul\r\n          style={\r\n            showSearchBarOnly\r\n              ? {\r\n                  display: \"block\",\r\n                  width: \"75%\",\r\n                }\r\n              : null\r\n          }\r\n        >\r\n          <SearchView width={showSearchBarOnly ? \"100%\" : null} />\r\n        </ul>\r\n\r\n        <ul style={currentUsername ? { display: \"none\" } : null}>\r\n          <button className=\"login--btn\" onClick={() => history.push(\"/login\")}>\r\n            Login\r\n          </button>\r\n          <button\r\n            className=\"signup--btn\"\r\n            onClick={() => history.push(\"/signup\")}\r\n          >\r\n            Signup\r\n          </button>\r\n        </ul>\r\n\r\n        <ul\r\n          className=\"right\"\r\n          style={!currentUsername ? { display: \"none\" } : null}\r\n        >\r\n          <Link to=\"/\">\r\n            {pathname === \"/\" ? <Icons.HomeActiveIcon /> : <Icons.HomeIcon />}\r\n          </Link>\r\n\r\n          <Link to=\"/chat\">\r\n            <Icons.ChatIcon />\r\n          </Link>\r\n\r\n          <Link to=\"/explore\">\r\n            {pathname === \"/explore\" ? (\r\n              <Icons.ExploreActiveIcon />\r\n            ) : (\r\n              <Icons.ExploreIcon />\r\n            )}\r\n          </Link>\r\n\r\n          <button onClick={toggleActivity} className=\"activity--btn\">\r\n            <Badge\r\n              badgeContent={notificationsCount}\r\n              color=\"error\"\r\n              style={{ marginTop: \"-8px\" }}\r\n            >\r\n              <Icons.ActivityIcon />\r\n            </Badge>\r\n          </button>\r\n\r\n          <Link to={`/${currentUsername}`}>\r\n            <img\r\n              style={\r\n                pathname === `/${currentUsername}`\r\n                  ? {\r\n                      border: \"solid 1px black\",\r\n                      padding: \"2px\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                    }\r\n                  : null\r\n              }\r\n              src={ProfilePicPlaceholder}\r\n              data-src={currentUserProfileimage}\r\n              alt=\"profile_image\"\r\n              className=\"lazy-image\"\r\n              onLoad={lazyLoadImage}\r\n            />\r\n          </Link>\r\n        </ul>\r\n      </div>\r\n\r\n      {showActivity ? (\r\n        <Fragment>\r\n          <Backdrop show={showActivity} toggle={toggleActivity} />\r\n          <Activity\r\n            currentUserUid={currentUserUid}\r\n            toggle={toggleActivity}\r\n            clear={() => setNotificationsCount(0)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserProfileimage: state.user.currentUserData.profile_image_url,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Backdrop.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\overflowToggler.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostOptModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostButton.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\AddPostModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\storage.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\MobileNavbar.js",["254"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as Icons from \"../Icons/CustomIcons\";\r\nimport { connect } from \"react-redux\";\r\nimport toggleOverflow from \"../utilities/overflowToggler\";\r\nimport AddPost from \"./AddPostModal\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport Activity from \"./Activity\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport firestore from \"../firebase/firestore\";\r\n\r\nconst MobileNavbar = ({\r\n  currentUsername,\r\n  currentUserProfileimage,\r\n  currentUserUid,\r\n}) => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [showAddPost, setShowAddPost] = useState(false);\r\n  const [showActivity, setShowActivity] = useState(false);\r\n  const [notificationsCount, setNotificationsCount] = useState(0);\r\n\r\n  const history = useHistory();\r\n  const pathname = history.location.pathname;\r\n\r\n  useEffect(() => {\r\n    if (currentUserUid) {\r\n      firestore\r\n        .collection(currentUserUid)\r\n        .doc(\"notifications\")\r\n        .onSnapshot((doc) => {\r\n          const data = [];\r\n          for (let e in doc.data()) {\r\n            data.push(e);\r\n          }\r\n          setNotificationsCount(data.length);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const toggleActivity = () => {\r\n    overflowToggler();\r\n    setShowActivity((prev) => !prev);\r\n  };\r\n\r\n  const toggleAddPostModal = () => {\r\n    toggleOverflow();\r\n    setShowAddPost((prev) => !prev);\r\n  };\r\n\r\n  const updateFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      toggleAddPostModal();\r\n      setSelectedImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"navbar--mobile\"\r\n        style={!currentUsername ? { display: \"none\" } : null}\r\n      >\r\n        {showAddPost ? (\r\n          <AddPost selectedImage={selectedImage} toggle={toggleAddPostModal} />\r\n        ) : null}\r\n\r\n        <Link to=\"/\">\r\n          {pathname === \"/\" ? <Icons.HomeActiveIcon /> : <Icons.HomeIcon />}\r\n        </Link>\r\n\r\n        <Link to=\"/explore\">\r\n          {pathname === \"/explore\" ? (\r\n            <Icons.ExploreActiveIconMobile />\r\n          ) : (\r\n            <Icons.SearchIcon />\r\n          )}\r\n        </Link>\r\n\r\n        <div>\r\n          <input\r\n            type=\"file\"\r\n            id=\"file_input\"\r\n            onChange={updateFile}\r\n            name=\"post\"\r\n          />\r\n          <label htmlFor=\"file_input\">\r\n            <Icons.NewPostIcon />\r\n          </label>\r\n        </div>\r\n\r\n        <button onClick={toggleActivity}>\r\n          <Badge badgeContent={notificationsCount} color=\"error\">\r\n            <Icons.ActivityIcon />\r\n          </Badge>\r\n        </button>\r\n\r\n        <Link to={`/${currentUsername}`}>\r\n          <img\r\n            src={currentUserProfileimage || \"https://bit.ly/3pc96tw\"}\r\n            style={\r\n              pathname === `/${currentUsername}`\r\n                ? {\r\n                    border: \"solid 1px black\",\r\n                    padding: \"2px\",\r\n                    width: \"20px\",\r\n                    height: \"20px\",\r\n                  }\r\n                : null\r\n            }\r\n            alt=\"profile_image\"\r\n          />\r\n        </Link>\r\n      </div>\r\n\r\n      {showActivity ? (\r\n        <Fragment>\r\n          <Backdrop show={showActivity} toggle={toggleActivity} />\r\n          <Activity\r\n            currentUserUid={currentUserUid}\r\n            toggle={toggleActivity}\r\n            clear={() => setNotificationsCount(0)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserProfileimage: state.user.currentUserData.profile_image_url,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MobileNavbar);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Profilepage.js",["255","256"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport ProfileSummary from \"../components/ProfileSummary\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport * as profileActions from \"../redux/profile/ProfileActions\";\r\nimport { connect } from \"react-redux\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport ProfileOptModal from \"../components/ProfileOptModal\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport UnfollowPrompt from \"../components/UnfollowPrompt\";\r\nimport ProfileButtonLine from \"../components/ProfileButtonLine\";\r\nimport PostsGrid from \"../components/PostsGrid\";\r\nimport UserListModal from \"../components/UserListModal\";\r\nimport Loader from \"../components/Loader\";\r\nimport * as userActions from \"../redux/user/userActions\";\r\nimport LoginNeededPrompt from \"../components/LoginNeededPrompt\";\r\n\r\nconst Profilepage = ({\r\n  history,\r\n  currentUserUid,\r\n  profiles,\r\n  GET_PROFILE_DATA,\r\n  currentUsername,\r\n  FOLLOW,\r\n  UNFOLLOW,\r\n  FETCH_FOLLOWERS,\r\n  FETCH_FOLLOWINGS,\r\n  loading,\r\n  loading_followers_or_following,\r\n  LOGOUT,\r\n}) => {\r\n  const profileUsername = history.location.pathname.slice(1);\r\n  const profileData = profiles.filter(\r\n    (profile) => profile?.username === profileUsername\r\n  );\r\n\r\n  //modal handlers\r\n  const [showProfileOptionsModal, setShowProfileOptionsModal] = useState(false);\r\n  const [showUnfollowPrompt, setShowUnfollowPrompt] = useState(false);\r\n  const [showFollowers, setShowFollowers] = useState(false);\r\n  const [showFollowings, setShowFollowings] = useState(false);\r\n  const [showLoginNeededPrompt, setShowLoginNeededPrompt] = useState(false);\r\n\r\n  //\r\n  const [showSavedPosts, setShowSavedPosts] = useState(false);\r\n\r\n  //followers and following list\r\n  const followersList = profiles.filter(\r\n    (profile) => profile.username === profileUsername\r\n  )[0]?.followers;\r\n  const followingList = profiles.filter(\r\n    (profile) => profile.username === profileUsername\r\n  )[0]?.followings;\r\n\r\n  const LOAD_FOLLOWERS = () => {\r\n    if (!followersList) {\r\n      FETCH_FOLLOWERS(profileUsername);\r\n    }\r\n    toggleModal(setShowFollowers);\r\n  };\r\n\r\n  const LOAD_FOLLOWINGS = () => {\r\n    if (!followingList) {\r\n      FETCH_FOLLOWINGS(profileUsername);\r\n    }\r\n    toggleModal(setShowFollowings);\r\n  };\r\n\r\n  const toggleModal = (setModal) => {\r\n    setModal((prev) => !prev);\r\n    overflowToggler();\r\n  };\r\n\r\n  const Logout = () => {\r\n    toggleModal(setShowProfileOptionsModal);\r\n    LOGOUT();\r\n    history.push(\"/\");\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  const follow = () => {\r\n    if (currentUserUid) {\r\n      FOLLOW(profileData[0]?.uid, currentUserUid);\r\n    } else {\r\n      toggleModal(setShowLoginNeededPrompt);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"auto\";\r\n    //set document title\r\n    document.title = `${profileUsername} at Instaclone`;\r\n    if (profileData.length <= 0) {\r\n      GET_PROFILE_DATA(profileUsername, currentUserUid);\r\n    }\r\n\r\n    return () => {\r\n      document.title = \"Instaclone\";\r\n    };\r\n  }, [profileUsername, currentUserUid]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar />\r\n      <MobileNavbar />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : !loading && profileData.length < 1 ? (\r\n        <p\r\n          style={{ marginTop: \"100px\", textAlign: \"center\", fontSize: \"15px\" }}\r\n        >\r\n          This link is broken\r\n        </p>\r\n      ) : (\r\n        <div className=\"profile--page\">\r\n          <ProfileSummary\r\n            profileData={profileData[0] || []}\r\n            toggleProfileOptions={() => toggleModal(setShowProfileOptionsModal)}\r\n            toggleUnfollowPrompt={() => toggleModal(setShowUnfollowPrompt)}\r\n            isMyProfile={currentUsername === profileUsername}\r\n            FOLLOW={follow}\r\n            LOAD_FOLLOWERS={LOAD_FOLLOWERS}\r\n            LOAD_FOLLOWINGS={LOAD_FOLLOWINGS}\r\n          />\r\n          <ProfileButtonLine\r\n            showSavedPosts={showSavedPosts}\r\n            isMyProfile={currentUsername === profileUsername}\r\n            viewSavedPosts={() => setShowSavedPosts(true)}\r\n            hideSavedPosts={() => setShowSavedPosts(false)}\r\n            no_posts={profileData[0]?.posts.length <= 0}\r\n            no_saved_posts={profileData[0]?.savedPosts.length <= 0}\r\n          />\r\n\r\n          {(showSavedPosts && profileData[0].savedPosts.length > 0) ||\r\n          (!showSavedPosts && profileData[0].posts.length > 0) ? (\r\n            <PostsGrid\r\n              userPosts={\r\n                showSavedPosts\r\n                  ? profileData[0]?.savedPosts\r\n                  : profileData[0]?.posts || []\r\n              }\r\n            />\r\n          ) : (\r\n            <p\r\n              style={{\r\n                fontSize: \"14px\",\r\n                textAlign: \"center\",\r\n                marginTop: \"50px\",\r\n              }}\r\n            >\r\n              No any {showSavedPosts ? \"saved posts.\" : \"posts.\"}\r\n            </p>\r\n          )}\r\n\r\n          {showProfileOptionsModal ? (\r\n            <Fragment>\r\n              <ProfileOptModal\r\n                toggle={() => toggleModal(setShowProfileOptionsModal)}\r\n                isMyProfile={currentUsername === profileUsername}\r\n                LOGOUT={Logout}\r\n              />\r\n              <Backdrop\r\n                show={showProfileOptionsModal}\r\n                toggle={() => toggleModal(setShowProfileOptionsModal)}\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          {showUnfollowPrompt ? (\r\n            <Fragment>\r\n              <Backdrop\r\n                show={showUnfollowPrompt}\r\n                toggle={() => toggleModal(setShowUnfollowPrompt)}\r\n              />\r\n              <UnfollowPrompt\r\n                profileUsername={profileUsername}\r\n                profileImage={profileData[0]?.profile_image_url}\r\n                toggle={() => toggleModal(setShowUnfollowPrompt)}\r\n                UNFOLLOW={() => UNFOLLOW(profileData[0].uid, currentUserUid)}\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n\r\n          {showFollowers || showFollowings ? (\r\n            <Fragment>\r\n              <Backdrop\r\n                toggle={() =>\r\n                  showFollowers\r\n                    ? toggleModal(setShowFollowers)\r\n                    : toggleModal(setShowFollowings)\r\n                }\r\n                show={showFollowers || showFollowings}\r\n              />\r\n              <UserListModal\r\n                title={showFollowers ? \"Followers\" : \"Following\"}\r\n                loading={loading_followers_or_following}\r\n                users={(showFollowers ? followersList : followingList) || []}\r\n                toggle={() =>\r\n                  showFollowers\r\n                    ? toggleModal(setShowFollowers)\r\n                    : toggleModal(setShowFollowings)\r\n                }\r\n              />\r\n            </Fragment>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n\r\n      {showLoginNeededPrompt ? (\r\n        <Fragment>\r\n          <LoginNeededPrompt\r\n            profilePage={true}\r\n            toggle={() => toggleModal(setShowLoginNeededPrompt)}\r\n          />\r\n          <Backdrop\r\n            show={showLoginNeededPrompt}\r\n            toggle={() => toggleModal(setShowLoginNeededPrompt)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.profile.loading,\r\n    currentUsername: state.user.currentUserData.username,\r\n    currentUserUid: state.user.currentUserData.uid,\r\n    profiles: state.profile.profiles,\r\n    loading: state.profile.loading,\r\n    loading_followers_or_following:\r\n      state.profile.loading_followers_or_following,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    LOGOUT: () => dispatch(userActions.LOGOUT()),\r\n    FETCH_FOLLOWERS: (username) =>\r\n      dispatch(profileActions.FETCH_FOLLOWERS(username)),\r\n    FETCH_FOLLOWINGS: (username) =>\r\n      dispatch(profileActions.FETCH_FOLLOWINGS(username)),\r\n    UNFOLLOW: (unfollowing_user_uid, unfollower_user_uid) =>\r\n      dispatch(\r\n        profileActions.UNFOLLOW(unfollowing_user_uid, unfollower_user_uid)\r\n      ),\r\n    FOLLOW: (following_user_uid, follower_user_uid) =>\r\n      dispatch(profileActions.FOLLOW(following_user_uid, follower_user_uid)),\r\n    GET_PROFILE_DATA: (profile_username, current_user_uid) =>\r\n      dispatch(\r\n        profileActions.GET_PROFILE_DATA(profile_username, current_user_uid)\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profilepage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileSummary.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\profileActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\profile\\ProfileActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\profileServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileOptModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UnfollowPrompt.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\ProfileButtonLine.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\PostsGrid.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\UserListModal.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Loader.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\PostView.js",["257","258","259","260","261"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\ExplorePage.js",["262","263"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport PostsGrid from \"../components/PostsGrid\";\r\nimport * as PostsActions from \"../redux/post/postsActions\";\r\nimport MobileNavbar from \"../components/MobileNavbar\";\r\nimport SearchView from \"../components/SearchView\";\r\n\r\nconst ExplorePage = ({ loading, explorePosts, loadExplorePosts }) => {\r\n  useEffect(() => {\r\n    if (explorePosts.length <= 0) {\r\n      loadExplorePosts();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"navbar--pc\">\r\n        <Navbar />\r\n      </div>\r\n\r\n      <div className=\"navbar--mobile-\">\r\n        <Navbar showSearchBarOnly={true} />\r\n      </div>\r\n\r\n      <MobileNavbar />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"explore--page\">\r\n          <PostsGrid userPosts={explorePosts} />\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.posts.loading_explore_posts,\r\n    explorePosts: state.posts.explore_posts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loadExplorePosts: () => dispatch(PostsActions.LOAD_EXPLORE_POSTS()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorePage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\SearchView.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\userServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Loginpage.js",["264"],"import React, { useState } from \"react\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport * as userActions from \"../redux/user/userActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Loginpage = ({ noFullPage, error, loading, currentUsername, LOGIN }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    LOGIN(username, password);\r\n  };\r\n\r\n  return (\r\n    <div className={!noFullPage ? `auth--page full--page` : \"auth--page\"}>\r\n      <div>\r\n        <p>Instaclone</p>\r\n        <form onSubmit={login}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            placeholder=\"Username\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            autoFocus\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <button type=\"submit\" disabled={loading}>\r\n            Login\r\n          </button>\r\n\r\n          <p style={{ color: \"red\" }}>{error}</p>\r\n        </form>\r\n      </div>\r\n\r\n      <div>\r\n        <p>Don't have an account yet?</p>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </div>\r\n\r\n      <div>\r\n        <FaGithub />\r\n        <a href=\"https://github.com/therealrinku/instaclone\" target=\"_blank\">\r\n          View on Github\r\n        </a>\r\n      </div>\r\n      {currentUsername ? <Redirect to=\"/\" /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    error: state.user.error,\r\n    loading: state.user.loading,\r\n    currentUsername: state.user.currentUserData.username,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    LOGIN: (username, password) =>\r\n      dispatch(userActions.LOGIN(username, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loginpage);\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Signuppage.js",["265"],"import React, { useState } from \"react\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { signupUser } from \"../services/authServices\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signuppage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const history = useHistory();\r\n\r\n  const SIGNUP = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const trimmed = {\r\n      email: email.trim(),\r\n      username: username.trim(),\r\n      password: password.trim(),\r\n    };\r\n\r\n    if (\r\n      trimmed.email !== \"\" &&\r\n      trimmed.email.length >= 8 &&\r\n      trimmed.email.length <= 40 &&\r\n      trimmed.email.includes(\"@\") &&\r\n      trimmed.email.includes(\".com\")\r\n    ) {\r\n      if (\r\n        trimmed.username.length >= 5 &&\r\n        trimmed.username.length <= 25 &&\r\n        !trimmed.username.includes(\" \")\r\n      ) {\r\n        if (trimmed.password.length >= 8 && trimmed.password.length <= 30) {\r\n          const response = await signupUser(\r\n            email,\r\n            username.trim().toLowerCase(),\r\n            password\r\n          );\r\n          if (response !== \"success\") {\r\n            setError(response);\r\n          } else {\r\n            history.push(\"/login\");\r\n          }\r\n        } else {\r\n          setError(\"Password must be between 8 and 30 characters.\");\r\n        }\r\n      } else {\r\n        setError(\"Username must be spaceless between 5 and 25 characters.\");\r\n      }\r\n    } else {\r\n      setError(\"Please enter a valid email address.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth--page\">\r\n      <div>\r\n        <p>Instaclone</p>\r\n        <form onSubmit={SIGNUP}>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username.toLowerCase()}\r\n            placeholder=\"Username\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <button type=\"submit\">Signup</button>\r\n          <p>By signing up, you agree to our terms and policies.</p>\r\n          <p style={{ color: \"red\" }}>{error}</p>\r\n        </form>\r\n      </div>\r\n\r\n      <div>\r\n        <p>Already have an account?</p>\r\n        <NavLink to=\"/login\">Login</NavLink>\r\n      </div>\r\n\r\n      <div>\r\n        <FaGithub />\r\n        <a href=\"https://github.com/therealrinku/instaclone\" target=\"_blank\">\r\n          View on Github\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signuppage;\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\Landingpage.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\user\\userActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\authServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Recommended.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsActions.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsActionTypes.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\redux\\post\\postsReducer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\CommentBox.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\postsServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\services\\commentServices.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\CommentsView.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Comment.js",["266"],"import { Fragment, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport overflowToggler from \"../utilities/overflowToggler\";\r\nimport Backdrop from \"./Backdrop\";\r\nimport UserListModal from \"./UserListModal\";\r\n\r\nconst Comment = ({\r\n  comments,\r\n  comment,\r\n  likeUnlikeComment,\r\n  currentUserUid,\r\n  currentUsername,\r\n  deleteComment,\r\n  getCommentLikers,\r\n  gettingCommentLikers,\r\n}) => {\r\n  const [showCommentLikers, setShowCommentLikers] = useState(false);\r\n  const commentLikers = comments.filter(\r\n    (cmt) => cmt.comment_uid === comment.comment_uid\r\n  )[0]?.likers;\r\n\r\n  const toggleModal = (setModal) => {\r\n    setModal((prev) => !prev);\r\n    overflowToggler();\r\n  };\r\n\r\n  const loadCommentLikers = () => {\r\n    toggleModal(setShowCommentLikers);\r\n    if (!commentLikers) {\r\n      getCommentLikers(comment.comment_uid);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"comment\">\r\n        <img src={comment.poster_profile_image} alt=\"profile-image\" />\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div>\r\n            <p className=\"username--comment\">\r\n              <NavLink to={`/${comment.poster_username}`}>\r\n                {comment.poster_username}\r\n              </NavLink>{\" \"}\r\n              {comment.comment}\r\n            </p>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginTop: \"-15px\",\r\n            }}\r\n          >\r\n            <p>1h</p>\r\n            <button onClick={loadCommentLikers}>\r\n              {comment.comment_likes_count || 0}{\" \"}\r\n              {comment.comment_likes_count === 1 ? \"like\" : \"likes\"}\r\n            </button>\r\n            <button\r\n              onClick={() =>\r\n                likeUnlikeComment(\r\n                  comment.liked_by_me ? \"unlike\" : \"like\",\r\n                  comment.comment_uid\r\n                )\r\n              }\r\n            >\r\n              {comment.liked_by_me ? \"unlike\" : \"like\"}\r\n            </button>\r\n            <button\r\n              style={\r\n                currentUserUid === comment.post_owner_uid ||\r\n                currentUsername === comment.poster_username\r\n                  ? { color: \"red\" }\r\n                  : { display: \"none\" }\r\n              }\r\n              onClick={() => deleteComment(comment.comment_uid)}\r\n            >\r\n              delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {showCommentLikers ? (\r\n        <Fragment>\r\n          <UserListModal\r\n            title=\"Likes\"\r\n            loading={gettingCommentLikers}\r\n            toggle={() => toggleModal(setShowCommentLikers)}\r\n            users={commentLikers || []}\r\n          />\r\n          <Backdrop\r\n            show={showCommentLikers}\r\n            toggle={() => toggleModal(setShowCommentLikers)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\LoginNeededPrompt.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\EditProfilePage.js",["267"],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\Activity.js",["268"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { VscClose } from \"react-icons/all\";\r\nimport clearNotification from \"../utilities/clearNotification\";\r\n\r\nconst Activity = ({ currentUserUid, toggle, clear }) => {\r\n  const history = useHistory();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    clearNotification(currentUserUid);\r\n    clear();\r\n\r\n    axios\r\n      .get(\r\n        `https://instacloone.herokuapp.com/user/getNotifications/${currentUserUid}`\r\n      )\r\n      .then((res) => {\r\n        setNotifications(res.data);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"notification-list\">\r\n      <div className=\"top\">\r\n        <p>Activity</p>\r\n        <button onClick={toggle}>\r\n          <VscClose />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"notifications\">\r\n        {notifications.length > 0 ? (\r\n          notifications\r\n            .sort((a, b) => {\r\n              return new Date(b.date) - new Date(a.date);\r\n            })\r\n            .map((noti) => {\r\n              return (\r\n                <div\r\n                  className=\"notification\"\r\n                  style={loading ? { display: \"none\" } : { width: \"100%\" }}\r\n                  key={noti.uid}\r\n                  onClick={() =>\r\n                    noti.post_id !== null\r\n                      ? history.push(`/p/${noti.post_id}`)\r\n                      : noti.notification === \"follow\"\r\n                      ? history.push(`/${noti.username}`)\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  <img\r\n                    src={noti.profile_image_url}\r\n                    alt=\"profile-pc\"\r\n                    className=\"profile-pic\"\r\n                  />\r\n                  <p>\r\n                    {noti.username}{\" \"}\r\n                    {noti.notification === \"like post\"\r\n                      ? \" liked your post.\"\r\n                      : noti.notification === \"like comment\"\r\n                      ? \" liked your comment.\"\r\n                      : noti.notification === \"comment added\"\r\n                      ? \" commented on your post.\"\r\n                      : noti.notification === \"follow\"\r\n                      ? \"started following you.\"\r\n                      : \"\"}\r\n                    <b style={{ color: \"grey\" }}>{noti.date}</b>\r\n                  </p>\r\n\r\n                  <img\r\n                    style={\r\n                      noti.post_image === null ? { display: \"none\" } : null\r\n                    }\r\n                    src={noti.post_image}\r\n                    alt=\"profile-pc\"\r\n                    className=\"post-img\"\r\n                  />\r\n                </div>\r\n              );\r\n            })\r\n        ) : (\r\n          <p\r\n            style={\r\n              loading\r\n                ? { display: \"none\" }\r\n                : { textAlign: \"center\", fontSize: \"14px\" }\r\n            }\r\n          >\r\n            No notifications\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div\r\n        style={\r\n          !loading\r\n            ? { display: \"none\" }\r\n            : { textAlign: \"center\", fontSize: \"14px\" }\r\n        }\r\n      >\r\n        <p>Loading...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\firestore.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\notificationPusher.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\clearNotification.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\firebase\\firebase.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\components\\MessageViewer.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\pages\\EditPasswordPage.js",[],"C:\\Users\\Rinku\\codes\\react\\instaclone\\client\\src\\utilities\\lazyLoadImage.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":52,"column":6,"nodeType":"275","endLine":52,"endColumn":21,"suggestions":"276"},{"ruleId":"273","severity":1,"message":"277","line":58,"column":6,"nodeType":"275","endLine":58,"endColumn":13,"suggestions":"278"},{"ruleId":"273","severity":1,"message":"279","line":27,"column":6,"nodeType":"275","endLine":27,"endColumn":34,"suggestions":"280"},{"ruleId":"273","severity":1,"message":"281","line":39,"column":6,"nodeType":"275","endLine":39,"endColumn":8,"suggestions":"282"},{"ruleId":"273","severity":1,"message":"281","line":39,"column":6,"nodeType":"275","endLine":39,"endColumn":8,"suggestions":"283"},{"ruleId":"273","severity":1,"message":"284","line":100,"column":6,"nodeType":"275","endLine":100,"endColumn":39,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":231,"column":5,"nodeType":"288","messageId":"289","endLine":231,"endColumn":12},{"ruleId":"290","severity":1,"message":"291","line":16,"column":10,"nodeType":"292","messageId":"293","endLine":16,"endColumn":23},{"ruleId":"290","severity":1,"message":"294","line":16,"column":25,"nodeType":"292","messageId":"293","endLine":16,"endColumn":41},{"ruleId":"273","severity":1,"message":"295","line":136,"column":6,"nodeType":"275","endLine":136,"endColumn":16,"suggestions":"296"},{"ruleId":"273","severity":1,"message":"297","line":147,"column":6,"nodeType":"275","endLine":147,"endColumn":38,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":288,"column":15,"nodeType":"301","endLine":291,"endColumn":17},{"ruleId":"290","severity":1,"message":"302","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":18},{"ruleId":"273","severity":1,"message":"303","line":15,"column":6,"nodeType":"275","endLine":15,"endColumn":8,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":53,"column":9,"nodeType":"301","endLine":53,"endColumn":78},{"ruleId":"305","severity":1,"message":"306","line":99,"column":9,"nodeType":"301","endLine":99,"endColumn":78},{"ruleId":"307","severity":1,"message":"308","line":37,"column":9,"nodeType":"301","endLine":37,"endColumn":71},{"ruleId":"307","severity":1,"message":"308","line":137,"column":9,"nodeType":"301","endLine":137,"endColumn":78},{"ruleId":"273","severity":1,"message":"309","line":24,"column":6,"nodeType":"275","endLine":24,"endColumn":8,"suggestions":"310"},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ADD_MESSAGE' and 'feedLoaded'. Either include them or remove the dependency array. If 'ADD_MESSAGE' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["313"],"React Hook useEffect has a missing dependency: 'LOGIN_WITH_UID'. Either include it or remove the dependency array. If 'LOGIN_WITH_UID' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["314"],"React Hook useEffect has missing dependencies: 'GET_FEED', 'GET_RECOMMENDED_USERS', and 'feed.length'. Either include them or remove the dependency array. If 'GET_FEED' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["315"],"React Hook useEffect has a missing dependency: 'currentUserUid'. Either include it or remove the dependency array.",["316"],["317"],"React Hook useEffect has missing dependencies: 'GET_PROFILE_DATA' and 'profileData.length'. Either include them or remove the dependency array. If 'GET_PROFILE_DATA' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["318"],"no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","unexpected","no-unused-vars","'deleteComment' is defined but never used.","Identifier","unusedVar","'getCommentLikers' is defined but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has missing dependencies: 'LOAD_POST' and 'currentPost.length'. Either include them or remove the dependency array. If 'LOAD_POST' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["320"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SearchView' is defined but never used.","React Hook useEffect has missing dependencies: 'explorePosts.length' and 'loadExplorePosts'. Either include them or remove the dependency array. If 'loadExplorePosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["321"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'clear' and 'currentUserUid'. Either include them or remove the dependency array. If 'clear' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["322"],"no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"329","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [ADD_MESSAGE, feedLoaded, uploadingPost]",{"range":"342","text":"343"},"Update the dependencies array to be: [LOGIN_WITH_UID, token]",{"range":"344","text":"345"},"Update the dependencies array to be: [GET_FEED, GET_RECOMMENDED_USERS, currentUserUid, feed.length, feedLoaded]",{"range":"346","text":"347"},"Update the dependencies array to be: [currentUserUid]",{"range":"348","text":"349"},{"range":"350","text":"349"},"Update the dependencies array to be: [profileUsername, currentUserUid, profileData.length, GET_PROFILE_DATA]",{"range":"351","text":"352"},"Update the dependencies array to be: [getComments, post_uid]",{"range":"353","text":"354"},"Update the dependencies array to be: [token, currentUserUid, post_id, currentPost.length, LOAD_POST]",{"range":"355","text":"356"},"Update the dependencies array to be: [explorePosts.length, loadExplorePosts]",{"range":"357","text":"358"},"Update the dependencies array to be: [clear, currentUserUid]",{"range":"359","text":"360"},[1765,1780],"[ADD_MESSAGE, feedLoaded, uploadingPost]",[1867,1874],"[LOGIN_WITH_UID, token]",[766,794],"[GET_FEED, GET_RECOMMENDED_USERS, currentUserUid, feed.length, feedLoaded]",[1297,1299],"[currentUserUid]",[1309,1311],[3111,3144],"[profileUsername, currentUserUid, profileData.length, GET_PROFILE_DATA]",[3895,3905],"[getComments, post_uid]",[4172,4204],"[token, currentUserUid, post_id, currentPost.length, LOAD_POST]",[571,573],"[explorePosts.length, loadExplorePosts]",[736,738],"[clear, currentUserUid]"]